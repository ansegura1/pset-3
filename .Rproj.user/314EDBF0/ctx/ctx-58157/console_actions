{
    "type": [
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2
    ],
    "data": [
        "\nR version 4.1.3 (2022-03-10) -- \"One Push-Up\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from ~/Taller_R/pset-3/.RData]\r\n\r\n",
        "> ",
        "ggplot2(data=parques)+grom_sf()",
        "Error in ggplot2(data = parques) : could not find function \"ggplot2\"\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "ggplot2(data=parques)+grom_sf()",
        "Error in ggplot2(data = parques) : could not find function \"ggplot2\"\n",
        "> ",
        "library(ggmap)",
        "\u001B[36mi\u001B[39m Google's Terms of Service: \u001B[3m\u001B[34m\u001B[3m\u001B[34m<https://mapsplatform.google.com>\u001B[34m\u001B[3m\u001B[39m\u001B[23m\n\u001B[36mi\u001B[39m Please cite \u001B[34m\u001B[34mggmap\u001B[34m\u001B[39m if you use it! Use `citation(\"ggmap\")` for details.\n",
        "> ",
        "library(ggraph)",
        "> ",
        "library(ggrepel)",
        "> ",
        "library(ggsn)",
        "Loading required package: grid\n",
        "> ",
        "library(tidytext)",
        "> ",
        "library(ggforce)",
        "> ",
        "ggplot2(data=parques)+grom_sf()",
        "Error in ggplot2(data = parques) : could not find function \"ggplot2\"\n",
        "> ",
        "peninbal_shp %>% ",
        "+ ",
        "  ggplot() +",
        "+ ",
        "  geom_sf() +",
        "+ ",
        "  theme_bw()",
        "Error in ggplot(.) : object 'peninbal_shp' not found\n",
        "> ",
        "MOQ %>%",
        "+ ",
        "  ggplot() + # Crea un objeto ggplot a partir del objeto mex_map",
        "+ ",
        "  geom_sf()",
        "> ",
        "MOQ %>%",
        "+ ",
        "  ggplot() + # Crea un objeto ggplot a partir del objeto mex_map",
        "+ ",
        "  addTiles()",
        "Error in addTiles() : could not find function \"addTiles\"\n",
        "> ",
        "opq(bbox = getbb(\"Armenia Colombia\")) # Vamos a obtener la caja de coordenada que contiene el poligono de Armenia##",
        "Error in opq(bbox = getbb(\"Armenia Colombia\")) : \n  could not find function \"opq\"\n",
        "> ",
        "opq=(bbox = getbb(\"Armenia Colombia\")) # Vamos a obtener la caja de coordenada que contiene el poligono de Armenia##",
        "Error in getbb(\"Armenia Colombia\") : could not find function \"getbb\"\n",
        "> ",
        "##################################Angela Segura Cod. 201619956   R version 4.1.3 ############################################",
        "> ",
        "",
        "> ",
        "##Taller Pset_3####",
        "> ",
        "",
        "> ",
        "###Crear directorio de trabajo##",
        "> ",
        "dir.create(\"code\") #Creamos carpeta llamada code, donde guardaremos el script",
        "Warning message:\n",
        "In dir.create(\"code\") :",
        " 'code' already exists\n",
        "> ",
        "dir.create(\"output\") #Creamos la carpeta output para los datos procesados",
        "Warning message:\n",
        "In dir.create(\"output\") :",
        " 'output' already exists\n",
        "> ",
        "list.files() ## Revisamos con que carpetas estamos trabajando#",
        "[1] \"code\"         \"input\"        \"output\"       \"pset-3.pdf\"   \"pset-3.Rproj\" \"README.md\"   \n",
        "> ",
        "##El script lo guardamos manualmente en la carpeta de code con el nombre Scriptrespuesta##",
        "> ",
        "",
        "> ",
        "###Instalar librerias##",
        "> ",
        "require(pacman) ",
        "Loading required package: pacman\n",
        "> ",
        "install.packages(\"tm\") #Tm y wordcloud se descargan para crear la nube de palabras",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/tm_0.7-9.zip'\n",
        "Content type 'application/zip'",
        " length 1686876 bytes (1.6 MB)\n",
        "downloaded 1.6 MB\n\n",
        "package ‘tm’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "> ",
        "install.packages(\"wordcloud\")",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/wordcloud_2.6.zip'\n",
        "Content type 'application/zip'",
        " length 787067 bytes (768 KB)\n",
        "downloaded 768 KB\n\n",
        "package ‘wordcloud’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "> ",
        "p_load(tidyverse, rio,skimr,tmaptools, sf, leaflet, rvest, xml2, osmdata, ggsn, tm,wordcloud,dplyr) # Llamamos las librerias  necesarias para el taller##",
        "> ",
        "#########################################1.Regresiones#######################################################",
        "> ",
        "",
        "> ",
        "####################################################2. Datos espaciales######################################################",
        "> ",
        "",
        "> ",
        "## 2.1  Descargar los datos##",
        "> ",
        "",
        "> ",
        "available_features() %>% head(100)",
        "  [1] \"4wd_only\"                \"abandoned\"               \"abutters\"                \"access\"                 \n  [5] \"addr\"                    \"addr:city\"               \"addr:conscriptionnumber\" \"addr:country\"           \n  [9] \"addr:county\"             \"addr:district\"           \"addr:flats\"              \"addr:full\"              \n [13] \"addr:hamlet\"             \"addr:housename\"          \"addr:housenumber\"        \"addr:inclusion\"         \n [17] \"addr:interpolation\"      \"addr:place\"              \"addr:postbox\"           ",
        " \"addr:postcode\"          \n [21] \"addr:province\"           \"addr:state\"              \"addr:street\"             \"addr:subdistrict\"       \n [25] \"addr:suburb\"             \"addr:unit\"               \"admin_level\"             \"aeroway\"                \n [29] \"agricultural\"            \"alt_name\"                \"amenity\"                 \"area\"                   \n [33] \"atv\"                     \"backward\"                \"barrier\"                 \"basin\"                  \n [37] \"bdouble\"                 \"bicycle\"                ",
        " \"bicycle_road\"            \"biergarten\"             \n [41] \"boat\"                    \"border_type\"             \"boundary\"                \"brand\"                  \n [45] \"bridge\"                  \"building\"                \"building:colour\"         \"building:fireproof\"     \n [49] \"building:flats\"          \"building:levels\"         \"building:material\"       \"building:min_level\"     \n [53] \"building:part\"           \"building:soft_storey\"    \"bus_bay\"                 \"busway\"                 \n [57] \"capacity\"               ",
        " \"castle_type\"             \"change\"                  \"charge\"                 \n [61] \"clothes\"                 \"construction\"            \"construction#Railways\"   \"covered\"                \n [65] \"craft\"                   \"crossing\"                \"crossing:island\"         \"cuisine\"                \n [69] \"cutting\"                 \"cycleway\"                \"denomination\"            \"destination\"            \n [73] \"diet\"                    \"direction\"               \"dispensing\"              \"disused\"                ",
        "\n [77] \"drinking_water\"          \"drive_in\"                \"drive_through\"           \"ele\"                    \n [81] \"electric_bicycle\"        \"electrified\"             \"embankment\"              \"embedded_rails\"         \n [85] \"emergency\"               \"end_date\"                \"entrance\"                \"est_width\"              \n [89] \"fee\"                     \"female\"                  \"fire_object:type\"        \"fire_operator\"          \n [93] \"fire_rank\"               \"foot\"                    \"footway\"                ",
        " \"ford\"                   \n [97] \"forestry\"                \"forward\"                 \"frequency\"               \"fuel\"                   \n",
        "> ",
        "available_tags(\"amenity\") %>% head(20)",
        " [1] \"animal_boarding\"        \"animal_breeding\"        \"animal_shelter\"         \"arts_centre\"           \n [5] \"atm\"                    \"baby_hatch\"             \"baking_oven\"            \"bank\"                  \n [9] \"bar\"                    \"bbq\"                    \"bench\"                  \"bicycle_parking\"       \n[13] \"bicycle_rental\"         \"bicycle_repair_station\" \"biergarten\"             \"boat_rental\"           \n[17] \"boat_sharing\"           \"brothel\"                \"bureau_de_change\"       \"bus_station\"           ",
        "\n",
        "> ",
        "opq=(bbox = getbb(\"Armenia Colombia\")) # Vamos a obtener la caja de coordenada que contiene el poligono de Armenia##",
        "> ",
        "osm = opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"amenity\" , value=\"restaurant\") #En internet encontramos cÃ³mo encontrar los datos de los restaurantes en openstreetmap. (https://wiki.openstreetmap.org/wiki/Tag:amenity%3Drestaurant)",
        "> ",
        "class(osm)",
        "[1] \"list\"           \"overpass_query\"\n",
        "> ",
        "## 2.1  Descargar los datos##",
        "> ",
        "",
        "> ",
        "available_features() %>% head(100)",
        "  [1] \"4wd_only\"                \"abandoned\"               \"abutters\"                \"access\"                 \n  [5] \"addr\"                    \"addr:city\"               \"addr:conscriptionnumber\" \"addr:country\"           \n  [9] \"addr:county\"             \"addr:district\"           \"addr:flats\"              \"addr:full\"              \n [13] \"addr:hamlet\"             \"addr:housename\"          \"addr:housenumber\"        \"addr:inclusion\"         \n [17] \"addr:interpolation\"      \"addr:place\"              \"addr:postbox\"           ",
        " \"addr:postcode\"          \n [21] \"addr:province\"           \"addr:state\"              \"addr:street\"             \"addr:subdistrict\"       \n [25] \"addr:suburb\"             \"addr:unit\"               \"admin_level\"             \"aeroway\"                \n [29] \"agricultural\"            \"alt_name\"                \"amenity\"                 \"area\"                   \n [33] \"atv\"                     \"backward\"                \"barrier\"                 \"basin\"                  \n [37] \"bdouble\"                 \"bicycle\"                ",
        " \"bicycle_road\"            \"biergarten\"             \n [41] \"boat\"                    \"border_type\"             \"boundary\"                \"brand\"                  \n [45] \"bridge\"                  \"building\"                \"building:colour\"         \"building:fireproof\"     \n [49] \"building:flats\"          \"building:levels\"         \"building:material\"       \"building:min_level\"     \n [53] \"building:part\"           \"building:soft_storey\"    \"bus_bay\"                 \"busway\"                 \n [57] \"capacity\"               ",
        " \"castle_type\"             \"change\"                  \"charge\"                 \n [61] \"clothes\"                 \"construction\"            \"construction#Railways\"   \"covered\"                \n [65] \"craft\"                   \"crossing\"                \"crossing:island\"         \"cuisine\"                \n [69] \"cutting\"                 \"cycleway\"                \"denomination\"            \"destination\"            \n [73] \"diet\"                    \"direction\"               \"dispensing\"              \"disused\"                ",
        "\n [77] \"drinking_water\"          \"drive_in\"                \"drive_through\"           \"ele\"                    \n [81] \"electric_bicycle\"        \"electrified\"             \"embankment\"              \"embedded_rails\"         \n [85] \"emergency\"               \"end_date\"                \"entrance\"                \"est_width\"              \n [89] \"fee\"                     \"female\"                  \"fire_object:type\"        \"fire_operator\"          \n [93] \"fire_rank\"               \"foot\"                    \"footway\"                ",
        " \"ford\"                   \n [97] \"forestry\"                \"forward\"                 \"frequency\"               \"fuel\"                   \n",
        "> ",
        "available_tags(\"amenity\") %>% head(20)",
        " [1] \"animal_boarding\"        \"animal_breeding\"        \"animal_shelter\"         \"arts_centre\"           \n [5] \"atm\"                    \"baby_hatch\"             \"baking_oven\"            \"bank\"                  \n [9] \"bar\"                    \"bbq\"                    \"bench\"                  \"bicycle_parking\"       \n[13] \"bicycle_rental\"         \"bicycle_repair_station\" \"biergarten\"             \"boat_rental\"           \n[17] \"boat_sharing\"           \"brothel\"                \"bureau_de_change\"       \"bus_station\"           ",
        "\n",
        "> ",
        "opq=(bbox = getbb(\"Armenia Colombia\")) # Vamos a obtener la caja de coordenada que contiene el poligono de Armenia##",
        "> ",
        "## Datos de los restaurantes en Armenia",
        "> ",
        "osm = opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"amenity\" , value=\"restaurant\") #En internet encontramos cÃ³mo encontrar los datos de los restaurantes en openstreetmap. (https://wiki.openstreetmap.org/wiki/Tag:amenity%3Drestaurant)",
        "> ",
        "class(osm)",
        "[1] \"list\"           \"overpass_query\"\n",
        "> ",
        "osm_sf = osm %>% osmdata_sf() ## extraer Simple Features Collection",
        "> ",
        "osm_sf",
        "Object of class 'osmdata' with:\n                 $bbox : 4.4934618,-75.7195038,4.5881794,-75.6324993\n        $overpass_call : The call submitted to the overpass API\n                 $meta : metadata including timestamp and version numbers\n           $osm_points : 'sf' Simple Features Collection with 315 points\n            $osm_lines : NULL\n         $osm_polygons : 'sf' Simple Features Collection with 35 polygons\n       $osm_multilines : NULL\n    $osm_multipolygons : NULL\n\n",
        "> ",
        "restaurant = osm_sf$osm_points %>% select(osm_id,amenity)#Obtenemos el objeto ",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "## Parques de Armenia",
        "> ",
        "parques <- opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key = \"leisure\", value = \"park\") %>%",
        "+ ",
        "  osmdata_sf() %>% .$osm_polygons %>% select(osm_id,name)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "## 2.2 Visualizar  los datos##",
        "> ",
        "",
        "> ",
        "#restaurantes",
        "> ",
        "leaflet() %>% addTiles() %>% addCircles(data=restaurant , col=\"red\")",
        "> ",
        "leaflet()%>% addTiles() %>% addPolygons(data=opq , col=\"red\")",
        "> ",
        "leaflet()%>% addTiles() %>% addPolygons(data=osm, col=\"red\")",
        "Error in polygonData.default(data) : \n  Don't know how to get path data from object of class list\n",
        "> ",
        "leaflet() %>% addTiles() %>% addPolygons(data=parques, col=\"blue\")",
        "> ",
        "MOQ <- geocode_OSM(\"Museo del Oro Quimbaya, Armenia\", as.sf=T) ",
        "> ",
        "leaflet() %>% addTiles() %>% addCircleMarkers(data=MOQ , col=\"yellow\")",
        "> ",
        "G1 %>%",
        "+ ",
        "  ggplot() + # Crea un objeto ggplot a partir del objeto mex_map",
        "+ ",
        "  geom_sf(data=parques, fill=\"white\")",
        "Error in ggplot(.) : object 'G1' not found\n",
        "> ",
        "G1 <-",
        "+ ",
        "  ggplot() + # Crea un objeto ggplot a partir del objeto mex_map",
        "+ ",
        "  geom_sf(data=parques, fill=\"white\")",
        "> ",
        "## 2.2 Visualizar  los datos##",
        "> ",
        "",
        "> ",
        "#restaurantes",
        "> ",
        "g1<-leaflet() %>% addTiles() %>% addCircles(data=restaurant , col=\"red\")",
        "> ",
        "#parques",
        "> ",
        "g2<-leaflet() %>% addTiles() %>% addPolygons(data=parques, col=\"blue\")",
        "> ",
        "",
        "> ",
        "#2.3 Geocodificar direcciones## ",
        "> ",
        "",
        "> ",
        "#Museo del oro Qumbaya",
        "> ",
        "MOQ <- geocode_OSM(\"Museo del Oro Quimbaya, Armenia\", as.sf=T) ",
        "> ",
        "#Pintar el punto del museo del Oro Quimbaya",
        "> ",
        "g3<-leaflet() %>% addTiles() %>% addCircleMarkers(data=MOQ , col=\"yellow\")",
        "> ",
        "View(g2)",
        "> ",
        " gg_inset<-ggdraw()",
        "Error in ggdraw() : could not find function \"ggdraw\"\n",
        "> ",
        " draw_plot(g1)+(g2)+(g3)",
        "Error in draw_plot(g1) : could not find function \"draw_plot\"\n",
        "> ",
        " ggsave(plot=gg_inset, fillname=\"./mapa\")",
        "Error in plot_dev(device, filename, dpi = dpi) : \n  argument \"filename\" is missing, with no default\n",
        "> ",
        "g3<-leaflet() %>% addTiles() %>% addCircleMarkers(data=MOQ , col=\"yellow\")",
        "> ",
        "g3",
        "> ",
        "g2",
        "> ",
        "g1",
        "> ",
        " gg_inset<-ggdraw()",
        "Error in ggdraw() : could not find function \"ggdraw\"\n",
        "> ",
        " draw_plot(g1)+(g2)+(g3)",
        "Error in draw_plot(g1) : could not find function \"draw_plot\"\n",
        "> ",
        " ggsave(plot=gg_inset, fillname=\"./mapa\")",
        "Error in plot_dev(device, filename, dpi = dpi) : \n  argument \"filename\" is missing, with no default\n",
        "> ",
        "gg_inset <- ggdraw() +",
        "+ ",
        "  draw_plot(g2) +",
        "+ ",
        "  draw_plot(g1, x = 0.72, y = 0.76, width = 0.28, height = 0.19) +",
        "+ ",
        "  draw_plot(g3, x = 0.03, y = 0.77, width = 0.25, height = 0.17)",
        "Error in ggdraw() : could not find function \"ggdraw\"\n",
        "> ",
        "require(pacman)",
        "> ",
        "pacman::p_load(raster, rgdal, rgeos, stringr, sf, tidyverse, RColorBrewer, cowplot, ggpubr, ",
        "+ ",
        "               ggspatial, rnaturalearth, rnaturalearthdata)",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rgdal_1.6-2.zip'\n",
        "Content type 'application/zip'",
        " length 45090401 bytes (43.0 MB)\n",
        "downloaded 43.0 MB\n\n",
        "package ‘rgdal’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\nrgdal installed\n",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rgeos_0.5-9.zip'\n",
        "Content type 'application/zip'",
        " length 2448093 bytes (2.3 MB)\n",
        "downloaded 2.3 MB\n\n",
        "package ‘rgeos’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\nrgeos installed\n",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/cowplot_1.1.1.zip'\n",
        "Content type 'application/zip'",
        " length 1376271 bytes (1.3 MB)\n",
        "downloaded 1.3 MB\n\n",
        "package ‘cowplot’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\ncowplot installed\n",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "also installing the dependencies ‘rprojroot’, ‘diffobj’, ‘brio’, ‘desc’, ‘pkgload’, ‘praise’, ‘waldo’, ‘Matrix’, ‘testthat’, ‘numDeriv’, ‘SparseM’, ‘MatrixModels’, ‘minqa’, ‘nloptr’, ‘cli’, ‘lifecycle’, ‘rlang’, ‘carData’, ‘pbkrtest’, ‘quantreg’, ‘lme4’, ‘vctrs’, ‘corrplot’, ‘car’, ‘ggplot2’, ‘ggsci’, ‘ggsignif’, ‘polynom’, ‘rstatix’\n\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rprojroot_2.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 109095 bytes (106 KB)\n",
        "downloaded 106 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/diffobj_0.3.5.zip'\n",
        "Content type 'application/zip'",
        " length 999101 bytes (975 KB)\n",
        "downloaded 975 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/brio_1.1.3.zip'\n",
        "Content type 'application/zip'",
        " length 49009 bytes (47 KB)\n",
        "downloaded 47 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/desc_1.4.2.zip'\n",
        "Content type 'application/zip'",
        " length 327295 bytes (319 KB)\n",
        "downloaded 319 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/pkgload_1.3.2.zip'\n",
        "Content type 'application/zip'",
        " length 178092 bytes (173 KB)\n",
        "downloaded 173 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/praise_1.0.0.zip'\n",
        "Content type 'application/zip'",
        " length 19852 bytes (19 KB)\n",
        "downloaded 19 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/waldo_0.4.0.zip'\n",
        "Content type 'application/zip'",
        " length 102246 bytes (99 KB)\n",
        "downloaded 99 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/Matrix_1.5-3.zip'\n",
        "Content type 'application/zip'",
        " length 5013790 bytes (4.8 MB)\n",
        "downloaded 4.8 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/testthat_3.1.5.zip'\n",
        "Content type 'application/zip'",
        " length 2569056 bytes (2.5 MB)\n",
        "downloaded 2.5 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/numDeriv_2016.8-1.1.zip'\n",
        "Content type 'application/zip'",
        " length 116205 bytes (113 KB)\n",
        "downloaded 113 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/SparseM_1.81.zip'\n",
        "Content type 'application/zip'",
        " length 1066525 bytes (1.0 MB)\n",
        "downloaded 1.0 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/MatrixModels_0.5-1.zip'\n",
        "Content type 'application/zip'",
        " length 424765 bytes (414 KB)\n",
        "downloaded 414 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/minqa_1.2.5.zip'\n",
        "Content type 'application/zip'",
        " length 855580 bytes (835 KB)\n",
        "downloaded 835 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/nloptr_2.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 1751645 bytes (1.7 MB)\n",
        "downloaded 1.7 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/cli_3.4.1.zip'\n",
        "Content type 'application/zip'",
        " length 1306321 bytes (1.2 MB)\n",
        "downloaded 1.2 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/lifecycle_1.0.3.zip'\n",
        "Content type 'application/zip'",
        " length 139266 bytes (136 KB)\n",
        "downloaded 136 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rlang_1.0.6.zip'\n",
        "Content type 'application/zip'",
        " length 1755351 bytes (1.7 MB)\n",
        "downloaded 1.7 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/carData_3.0-5.zip'\n",
        "Content type 'application/zip'",
        " length 1822506 bytes (1.7 MB)\n",
        "downloaded 1.7 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/pbkrtest_0.5.1.zip'\n",
        "Content type 'application/zip'",
        " length 357081 bytes (348 KB)\n",
        "downloaded 348 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/quantreg_5.94.zip'\n",
        "Content type 'application/zip'",
        " length 1953560 bytes (1.9 MB)\n",
        "downloaded 1.9 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/lme4_1.1-31.zip'\n",
        "Content type 'application/zip'",
        " length 5009035 bytes (4.8 MB)\n",
        "downloaded 4.8 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/vctrs_0.5.1.zip'\n",
        "Content type 'application/zip'",
        " length 1643938 bytes (1.6 MB)\n",
        "downloaded 1.6 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/corrplot_0.92.zip'\n",
        "Content type 'application/zip'",
        " length 3844778 bytes (3.7 MB)\n",
        "downloaded 3.7 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/car_3.1-1.zip'\n",
        "Content type 'application/zip'",
        " length 1707285 bytes (1.6 MB)\n",
        "downloaded 1.6 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/ggplot2_3.4.0.zip'\n",
        "Content type 'application/zip'",
        " length 4219414 bytes (4.0 MB)\n",
        "downloaded 4.0 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/ggsci_2.9.zip'\n",
        "Content type 'application/zip'",
        " length 2978256 bytes (2.8 MB)\n",
        "downloaded 2.8 MB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/ggsignif_0.6.4.zip'\n",
        "Content type 'application/zip'",
        " length 601503 bytes (587 KB)\n",
        "downloaded 587 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/polynom_1.4-1.zip'\n",
        "Content type 'application/zip'",
        " length 405018 bytes (395 KB)\n",
        "downloaded 395 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rstatix_0.7.1.zip'\n",
        "Content type 'application/zip'",
        " length 608873 bytes (594 KB)\n",
        "downloaded 594 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/ggpubr_0.5.0.zip'\n",
        "Content type 'application/zip'",
        " length 2057823 bytes (2.0 MB)\n",
        "downloaded 2.0 MB\n\n",
        "package ‘rprojroot’ successfully unpacked and MD5 sums checked\npackage ‘diffobj’ successfully unpacked and MD5 sums checked\npackage ‘brio’ successfully unpacked and MD5 sums checked\npackage ‘desc’ successfully unpacked and MD5 sums checked\npackage ‘pkgload’ successfully unpacked and MD5 sums checked\npackage ‘praise’ successfully unpacked and MD5 sums checked\npackage ‘waldo’ successfully unpacked and MD5 sums checked\npackage ‘Matrix’ successfully unpacked and MD5 sums checked\n",
        "package ‘testthat’ successfully unpacked and MD5 sums checked\npackage ‘numDeriv’ successfully unpacked and MD5 sums checked\npackage ‘SparseM’ successfully unpacked and MD5 sums checked\npackage ‘MatrixModels’ successfully unpacked and MD5 sums checked\npackage ‘minqa’ successfully unpacked and MD5 sums checked\npackage ‘nloptr’ successfully unpacked and MD5 sums checked\npackage ‘cli’ successfully unpacked and MD5 sums checked\n",
        "Warning:",
        " cannot remove prior installation of package ‘cli’\n",
        "Warning:",
        " restored ‘cli’\n",
        "package ‘lifecycle’ successfully unpacked and MD5 sums checked\npackage ‘rlang’ successfully unpacked and MD5 sums checked\n",
        "Warning:",
        " cannot remove prior installation of package ‘rlang’\n",
        "Warning:",
        " restored ‘rlang’\n",
        "package ‘carData’ successfully unpacked and MD5 sums checked\npackage ‘pbkrtest’ successfully unpacked and MD5 sums checked\npackage ‘quantreg’ successfully unpacked and MD5 sums checked\npackage ‘lme4’ successfully unpacked and MD5 sums checked\npackage ‘vctrs’ successfully unpacked and MD5 sums checked\n",
        "Warning:",
        " cannot remove prior installation of package ‘vctrs’\n",
        "Warning:",
        " restored ‘vctrs’\n",
        "package ‘corrplot’ successfully unpacked and MD5 sums checked\npackage ‘car’ successfully unpacked and MD5 sums checked\npackage ‘ggplot2’ successfully unpacked and MD5 sums checked\npackage ‘ggsci’ successfully unpacked and MD5 sums checked\npackage ‘ggsignif’ successfully unpacked and MD5 sums checked\npackage ‘polynom’ successfully unpacked and MD5 sums checked\npackage ‘rstatix’ successfully unpacked and MD5 sums checked\npackage ‘ggpubr’ successfully unpacked and MD5 sums checked\n",
        "\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\nggpubr installed\n",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "also installing the dependencies ‘rjson’, ‘prettymapr’, ‘rosm’\n\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rjson_0.2.21.zip'\n",
        "Content type 'application/zip'",
        " length 772194 bytes (754 KB)\n",
        "downloaded 754 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/prettymapr_0.2.4.zip'\n",
        "Content type 'application/zip'",
        " length 940014 bytes (917 KB)\n",
        "downloaded 917 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rosm_0.2.6.zip'\n",
        "Content type 'application/zip'",
        " length 530014 bytes (517 KB)\n",
        "downloaded 517 KB\n\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/ggspatial_1.1.7.zip'\n",
        "Content type 'application/zip'",
        " length 2527464 bytes (2.4 MB)\n",
        "downloaded 2.4 MB\n\n",
        "package ‘rjson’ successfully unpacked and MD5 sums checked\npackage ‘prettymapr’ successfully unpacked and MD5 sums checked\npackage ‘rosm’ successfully unpacked and MD5 sums checked\npackage ‘ggspatial’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\nggspatial installed\n",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rnaturalearth_0.1.0.zip'\n",
        "Content type 'application/zip'",
        " length 228743 bytes (223 KB)\n",
        "downloaded 223 KB\n\n",
        "package ‘rnaturalearth’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\nrnaturalearth installed\n",
        "Installing package into ‘C:/Users/huawe/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "Warning:",
        " unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1:\n  cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.1/PACKAGES'\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/rnaturalearthdata_0.1.0.zip'\n",
        "Content type 'application/zip'",
        " length 3239501 bytes (3.1 MB)\n",
        "downloaded 3.1 MB\n\n",
        "package ‘rnaturalearthdata’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\huawe\\AppData\\Local\\Temp\\Rtmpg30lr1\\downloaded_packages\n",
        "\nrnaturalearthdata installed\n",
        "Warning messages:\n",
        "1: ",
        "In file.copy(savedcopy, lib, recursive = TRUE) :",
        "\n ",
        " problem copying C:\\Users\\huawe\\Documents\\R\\win-library\\4.1\\00LOCK\\cli\\libs\\x64\\cli.dll to C:\\Users\\huawe\\Documents\\R\\win-library\\4.1\\cli\\libs\\x64\\cli.dll: Permission denied\n",
        "2: ",
        "In file.copy(savedcopy, lib, recursive = TRUE) :",
        "\n ",
        " problem copying C:\\Users\\huawe\\Documents\\R\\win-library\\4.1\\00LOCK\\rlang\\libs\\x64\\rlang.dll to C:\\Users\\huawe\\Documents\\R\\win-library\\4.1\\rlang\\libs\\x64\\rlang.dll: Permission denied\n",
        "3: ",
        "In file.copy(savedcopy, lib, recursive = TRUE) :",
        "\n ",
        " problem copying C:\\Users\\huawe\\Documents\\R\\win-library\\4.1\\00LOCK\\vctrs\\libs\\x64\\vctrs.dll to C:\\Users\\huawe\\Documents\\R\\win-library\\4.1\\vctrs\\libs\\x64\\vctrs.dll: Permission denied\n",
        "> ",
        "gg_inset <- ggdraw() +",
        "+ ",
        "  draw_plot(g2) +",
        "+ ",
        "  draw_plot(g1, x = 0.72, y = 0.76, width = 0.28, height = 0.19) +",
        "+ ",
        "  draw_plot(g3, x = 0.03, y = 0.77, width = 0.25, height = 0.17)",
        "Warning messages:\n",
        "1: ",
        "In as_grob.default(plot) :",
        "\n ",
        " Cannot convert object of class leaflethtmlwidget into a grob.\n",
        "2: ",
        "In as_grob.default(plot) :",
        "\n ",
        " Cannot convert object of class leaflethtmlwidget into a grob.\n",
        "3: ",
        "In as_grob.default(plot) :",
        "\n ",
        " Cannot convert object of class leaflethtmlwidget into a grob.\n",
        "> ",
        "ggsave(plot = gg_inset,",
        "+ ",
        "       filename = './myMap_inset.png', units = 'in', width = 8, height = 10, dpi = 300)",
        "> ",
        "gg_inset",
        "> ",
        "gg_inset <- ggdraw() +",
        "+ ",
        "  draw_plot(g2) +",
        "+ ",
        "  draw_plot(g1) +",
        "+ ",
        "  draw_plot(g3) ",
        "Warning messages:\n",
        "1: ",
        "In as_grob.default(plot) :",
        "\n ",
        " Cannot convert object of class leaflethtmlwidget into a grob.\n",
        "2: ",
        "In as_grob.default(plot) :",
        "\n ",
        " Cannot convert object of class leaflethtmlwidget into a grob.\n",
        "3: ",
        "In as_grob.default(plot) :",
        "\n ",
        " Cannot convert object of class leaflethtmlwidget into a grob.\n",
        "> ",
        "data_regresiones<-import(file =\"input/data_regresiones.rds\" )",
        "> ",
        "summary(data_regresiones)",
        "     rooms          bathrooms      surface_total         price           property_type         dist_cbd       \n Min.   : 1.000   Min.   : 1.000   Min.   :   1.01   Min.   :0.000e+00   Length:54577       Min.   :   28.25  \n 1st Qu.: 3.000   1st Qu.: 2.000   1st Qu.:  71.00   1st Qu.:3.150e+08   Class :character   1st Qu.: 7800.47  \n Median : 3.000   Median : 3.000   Median : 104.00   Median :5.024e+08   Mode  :character   Median :10310.96  \n Mean   : 3.446   Mean   : 2.869   Mean   : 146.72   Mean   :7.483e+08  ",
        "                    Mean   :10073.38  \n 3rd Qu.: 4.000   3rd Qu.: 4.000   3rd Qu.: 175.00   3rd Qu.:8.690e+08                      3rd Qu.:12868.04  \n Max.   :99.000   Max.   :20.000   Max.   :2660.00   Max.   :3.220e+10                      Max.   :23525.32  \n   dist_cole          dist_park         luces_2019      luces_2021     cambio_activ     \n Min.   :   2.482   Min.   :   0.00   Min.   :54.00   Min.   :55.00   Min.   :-1.61290  \n 1st Qu.: 497.414   1st Qu.:  44.41   1st Qu.:63.00   1st Qu.:63.00   1st Qu.: 0.00000  ",
        "\n Median : 767.514   Median :  92.29   Median :63.00   Median :63.00   Median : 0.00000  \n Mean   :1034.802   Mean   : 121.25   Mean   :62.96   Mean   :62.97   Mean   : 0.01579  \n 3rd Qu.:1078.863   3rd Qu.: 156.73   3rd Qu.:63.00   3rd Qu.:63.00   3rd Qu.: 0.00000  \n Max.   :8282.299   Max.   :2435.73   Max.   :63.00   Max.   :63.00   Max.   : 1.85185  \n",
        "> ",
        "View(data_regresiones)",
        "Error in fetch(key) : \n  lazy-load database 'C:/Users/huawe/Documents/R/win-library/4.1/ggplot2/help/ggplot2.rdb' is corrupt\n",
        "> ",
        "m1_price<-lm(price~dist_park+luces_2021+rooms+bathrooms, data=data_regresiones)",
        "> ",
        "summary(m1_price)",
        "\nCall:\nlm(formula = price ~ dist_park + luces_2021 + rooms + bathrooms, \n    data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-6.162e+09 -2.606e+08 -9.502e+07  9.774e+07  3.108e+10 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 3444569155  529746210   6.502 7.98e-11 ***\ndist_park       286855      25552  11.226  < 2e-16 ***\nluces_2021   -58510394    8387076  -6.976 3.07e-12 ***\nrooms           483853    1216239   0.398    0.691    ",
        "\nbathrooms    331794784    2327490 142.555  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 697600000 on 54572 degrees of freedom\nMultiple R-squared:  0.2956,\tAdjusted R-squared:  0.2956 \nF-statistic:  5726 on 4 and 54572 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "View(data_regresiones)",
        "> ",
        "View(data_regresiones)",
        "> ",
        "m2_price<-lm(price~dist_park+dist_cbd +rooms+bathrooms, data=data_regresiones)",
        "> ",
        "summary(m2_price)",
        "\nCall:\nlm(formula = price ~ dist_park + dist_cbd + rooms + bathrooms, \n    data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.972e+09 -2.605e+08 -6.903e+07  1.050e+08  3.105e+10 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  6.539e+07  1.115e+07   5.866 4.48e-09 ***\ndist_park    4.103e+05  2.274e+04  18.047  < 2e-16 ***\ndist_cbd    -3.079e+04  7.835e+02 -39.302  < 2e-16 ***\nrooms        2.971e+06  1.201e+06   2.473   0.0134 *  ",
        "\nbathrooms    3.253e+08  2.302e+06 141.295  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 688200000 on 54572 degrees of freedom\nMultiple R-squared:  0.3144,\tAdjusted R-squared:  0.3144 \nF-statistic:  6257 on 4 and 54572 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "m3_price<-lm(price~dist_park+surfice_total +rooms+bathrooms, data=data_regresiones)",
        "Error in eval(predvars, data, env) : object 'surfice_total' not found\n",
        "> ",
        "#Modelo 3",
        "> ",
        "m3_price<-lm(price~dist_park+surface_total +rooms+bathrooms, data=data_regresiones)",
        "> ",
        "summary(m3_price)",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + rooms + bathrooms, \n    data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.094e+09 -2.128e+08 -6.573e+07  8.939e+07  3.096e+10 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -165481301    7409188 -22.335  < 2e-16 ***\ndist_park        -102358      22271  -4.596 4.31e-06 ***\nsurface_total    1876801      21783  86.160  < 2e-16 ***\nrooms           -4363188    1142989  -3.817",
        " 0.000135 ***\nbathrooms      232135700    2473541  93.848  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 654800000 on 54572 degrees of freedom\nMultiple R-squared:  0.3794,\tAdjusted R-squared:  0.3794 \nF-statistic:  8341 on 4 and 54572 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "m1_price<-lm(price~dist_park+surface_total+luces_2021+rooms+bathrooms, data=data_regresiones)",
        "> ",
        "summary(m1_price)",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + luces_2021 + \n    rooms + bathrooms, data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.356e+09 -2.099e+08 -6.645e+07  8.714e+07  3.095e+10 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -9.761e+09  5.179e+08 -18.849  < 2e-16 ***\ndist_park      6.842e+04  2.404e+04   2.846  0.00442 ** \nsurface_total  1.999e+06  2.270e+04  88.079  < 2e-16 ***\nluces_2021     1.520e+08  8.204e+06",
        "  18.531  < 2e-16 ***\nrooms         -4.476e+06  1.139e+06  -3.928 8.56e-05 ***\nbathrooms      2.266e+08  2.484e+06  91.236  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 652700000 on 54571 degrees of freedom\nMultiple R-squared:  0.3833,\tAdjusted R-squared:  0.3832 \nF-statistic:  6784 on 5 and 54571 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "m2_price<-lm(price~dist_park+surface_total+dist_cbd +rooms+bathrooms, data=data_regresiones)",
        "> ",
        "summary(m2_price)",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + dist_cbd + rooms + \n    bathrooms, data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.067e+09 -2.059e+08 -4.195e+07  9.546e+07  3.094e+10 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    1.589e+08  1.048e+07  15.154  < 2e-16 ***\ndist_park     -5.792e+04  2.193e+04  -2.641  0.00826 ** \nsurface_total  1.888e+06  2.142e+04  88.109  < 2e-16 ***\ndist_cbd      -3.155e+04  7.331e+02",
        " -43.036  < 2e-16 ***\nrooms         -1.926e+06  1.126e+06  -1.711  0.08710 .  \nbathrooms      2.245e+08  2.439e+06  92.045  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 643900000 on 54571 degrees of freedom\nMultiple R-squared:  0.3998,\tAdjusted R-squared:  0.3997 \nF-statistic:  7270 on 5 and 54571 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "m3_price<-lm(price~dist_park+surface_total +rooms+bathrooms, data=data_regresiones)",
        "> ",
        "summary(m3_price)",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + rooms + bathrooms, \n    data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.094e+09 -2.128e+08 -6.573e+07  8.939e+07  3.096e+10 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -165481301    7409188 -22.335  < 2e-16 ***\ndist_park        -102358      22271  -4.596 4.31e-06 ***\nsurface_total    1876801      21783  86.160  < 2e-16 ***\nrooms           -4363188    1142989  -3.817",
        " 0.000135 ***\nbathrooms      232135700    2473541  93.848  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 654800000 on 54572 degrees of freedom\nMultiple R-squared:  0.3794,\tAdjusted R-squared:  0.3794 \nF-statistic:  8341 on 4 and 54572 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "m3_price<-lm(price~dist_park+surface_total +rooms+bathrooms+dist_cole, data=data_regresiones)",
        "> ",
        "summary(m3_price)",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + rooms + bathrooms + \n    dist_cole, data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.108e+09 -2.194e+08 -7.549e+07  9.233e+07  3.098e+10 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -44034212    8124221  -5.420 5.98e-08 ***\ndist_park       -117406      22034  -5.328 9.95e-08 ***\nsurface_total   1867212      21549  86.649  < 2e-16 ***\nrooms          -2219998    1132323",
        "  -1.961   0.0499 *  \nbathrooms     221959314    2464366  90.068  < 2e-16 ***\ndist_cole        -93168       2689 -34.646  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 647700000 on 54571 degrees of freedom\nMultiple R-squared:  0.3928,\tAdjusted R-squared:  0.3927 \nF-statistic:  7060 on 5 and 54571 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "roo",
        "Error: object 'roo' not found\n",
        "> ",
        "R.version.string",
        "[1] \"R version 4.1.3 (2022-03-10)\"\n",
        "> ",
        "View(m1_price)",
        "> ",
        "m1_price[[\"coefficients\"]]",
        "  (Intercept)     dist_park surface_total    luces_2021         rooms     bathrooms \n-9.760992e+09  6.842058e+04  1.999361e+06  1.520232e+08 -4.476128e+06  2.266107e+08 \n",
        "> ",
        "View(m1_price[[\"model\"]])",
        "> ",
        "m1_price[[\"coefficients\"]]",
        "  (Intercept)     dist_park surface_total    luces_2021         rooms     bathrooms \n-9.760992e+09  6.842058e+04  1.999361e+06  1.520232e+08 -4.476128e+06  2.266107e+08 \n",
        "> ",
        "m1_price[[\"effects\"]]",
        "  (Intercept)     dist_park surface_total    luces_2021         rooms     bathrooms                                           \n-1.748205e+11  2.491800e+10 -9.914659e+10  1.961977e+10  8.272298e+09  5.955200e+10  4.373973e+07  8.268950e+08  2.251990e+09 \n                                                                                                                              \n-4.419344e+08  8.207170e+08  3.212859e+07 -1.911062e+08  9.268307e+07 -1.809036e+08 -6.741577e+07  2.332940e+07 -1.407470e+08 \n              ",
        "                                                                                                                \n 5.746422e+07  2.449047e+07 -2.319154e+07 -5.728605e+08 -8.966460e+06 -7.609460e+08 -2.079612e+08 -2.372548e+07 -7.888500e+07 \n                                                                                                                              \n-1.107943e+08 -9.178383e+07 -3.876908e+07  2.142724e+08  2.133040e+06  1.883632e+08  4.464130e+08  1.364330e+09  5.418008e+07 \n                            ",
        "                                                                                                  \n-7.951096e+07 -3.758597e+07  9.981467e+06  3.270527e+07  2.224275e+07 -2.489934e+08 -7.493761e+08 -2.404094e+07 -1.999678e+07 \n                                                                                                                              \n-6.136839e+08 -1.915494e+08  2.853017e+08 -1.608528e+08  4.156195e+06 -5.872856e+07 -1.247345e+08 -2.714265e+08  1.677365e+08 \n                                          ",
        "                                                                                    \n 5.003490e+08  2.045392e+08 -3.616059e+08 -1.155032e+07  3.723694e+08 -5.627150e+07  1.743587e+08 -1.072731e+08 -8.684403e+07 \n                                                                                                                              \n-7.189042e+07 -2.563528e+08  2.281302e+08 -1.858118e+07 -9.795976e+07 -1.209598e+08 -1.343665e+08 -1.134965e+08 -5.910424e+08 \n                                                        ",
        "                                                                      \n-5.930618e+08  2.039314e+08 -1.879250e+08  2.099977e+08 -6.728718e+08 -1.420765e+08  3.070320e+08  2.852776e+08 -1.263847e+08 \n                                                                                                                              \n-5.501333e+07  1.259115e+08 -1.287447e+08  4.829451e+08 -1.472357e+07  9.749130e+08  1.619087e+08  5.961801e+08  1.303981e+09 \n                                                                      ",
        "                                                        \n 7.397133e+08 -5.113209e+07 -1.280808e+09  2.079971e+07 -1.709299e+08 -1.624044e+08 -2.103196e+07  3.204350e+07 -6.500072e+08 \n                                                                                                                              \n-8.200537e+07 -1.854092e+07 -4.857152e+07 -1.407453e+07 -4.716219e+07  4.719248e+07 -1.356367e+08  1.136511e+09 -4.322843e+07 \n                                                                                    ",
        "                                          \n-2.083175e+08 -1.565513e+08 -6.074543e+07 -3.909108e+07 -1.916149e+08 -1.409108e+07 -1.499431e+07 -1.747027e+07 -2.509573e+08 \n                                                                                                                              \n-2.048261e+08 -3.076601e+08 -3.403258e+08 -3.106715e+08 -4.741551e+08 -5.011621e+08 -2.860270e+08 -4.626920e+08 -5.394369e+08 \n                                                                                                  ",
        "                            \n-9.961838e+08 -6.285509e+08 -2.827703e+08  6.667567e+07  3.573621e+06 -9.128098e+06 -8.106117e+07 -3.101747e+08 -3.341392e+07 \n                                                                                                                              \n 2.341957e+07 -3.097446e+08 -4.277622e+08  3.756864e+07 -2.535265e+08 -1.697837e+08  2.542982e+06 -2.360815e+08 -3.993765e+08 \n                                                                                                                ",
        "              \n-1.914717e+08 -6.330029e+07 -1.771990e+08 -2.170569e+08 -6.150308e+07  1.467139e+08  1.415124e+08  7.795286e+08 -1.685677e+08 \n                                                                                                                              \n-8.790303e+07  5.988781e+07  2.132275e+08 -5.907394e+07 -5.166681e+08 -1.652192e+08  3.856018e+07 -5.390201e+06 -1.179964e+07 \n                                                                                                                              ",
        "\n 3.445685e+07  6.468074e+07 -1.879311e+08 -1.703128e+08  5.445330e+08 -8.483201e+07 -1.599347e+08 -9.513247e+06  4.280269e+08 \n                                                                                                                              \n 1.075355e+09 -1.283595e+09 -2.274713e+08 -8.499400e+07 -1.694844e+06  1.097327e+07 -5.504331e+07  4.536986e+08  1.984069e+08 \n                                                                                                                              \n-4.024793e+08 ",
        "-4.470340e+07 -1.219848e+08 -1.863434e+08  2.956092e+07 -1.309406e+08  9.594044e+07  4.882055e+08  2.013400e+06 \n                                                                                                                              \n 1.346257e+08 -1.617452e+08  1.535071e+08  3.395656e+08  4.058314e+08  2.172286e+08  8.903517e+08  1.310252e+09  1.066348e+09 \n                                                                                                                              \n 6.180876e+08 -4.719106e+07 ",
        "-6.642574e+06 -1.667855e+08 -2.900660e+07  1.447413e+08 -2.096164e+08 -2.247510e+08 -1.716617e+08 \n                                                                                                                              \n 3.546749e+05 -2.238390e+07 -1.307511e+08  1.287678e+08  2.257139e+07 -3.739155e+07  5.849602e+07 -9.347783e+06  8.788803e+08 \n                                                                                                                              \n-1.815354e+07  1.051522e+09 -3.065380e+08 ",
        "-1.648869e+08 -2.074191e+08  1.638298e+08 -7.057287e+08 -1.302499e+08  4.282089e+08 \n                                                                                                                              \n-1.274782e+08 -1.307624e+09  2.944319e+08 -7.203452e+07 -1.726682e+08  2.449790e+08  5.366828e+07  2.653600e+08  2.517315e+08 \n                                                                                                                              \n-1.455419e+09 -4.910860e+07  5.815202e+06 -3.833284e+07 ",
        " 2.466991e+08  1.064883e+08 -7.839168e+07 -2.124801e+08 -1.927509e+08 \n                                                                                                                              \n-5.037519e+08 -2.660216e+08  1.013274e+09 -2.315536e+08  1.359399e+09  1.188633e+08  2.849947e+08 -5.842506e+08  7.599085e+08 \n                                                                                                                              \n-4.223771e+08  4.338851e+08 -6.125279e+08 -4.123951e+08 -1.229686e+09 ",
        "-7.806857e+08 -2.615118e+09  2.799240e+07 -3.665215e+08 \n                                                                                                                              \n-2.693288e+08  1.254285e+08  8.819140e+08 -4.819175e+08 -4.681026e+08 -2.138336e+08 -2.134782e+08 -2.850712e+08 -5.803911e+07 \n                                                                                                                              \n-2.441993e+09  7.397971e+07 -1.998431e+08  1.235271e+07 -2.534746e+08 -5.881449e+08 ",
        "-5.169378e+08 -9.921359e+08 -1.722924e+08 \n                                                                                                                              \n-8.076078e+08 -2.295199e+08 -7.541730e+07 -1.710385e+08 -2.679825e+08  3.626009e+07 -2.347250e+08 -9.555722e+07 -2.781431e+08 \n                                                                                                                              \n-3.191863e+08 -4.580716e+06 -3.702940e+08  3.899476e+07 -2.365933e+08 -4.056090e+07 -2.024627e+08 ",
        "-5.066294e+08 -6.790542e+08 \n                                                                                                                              \n-2.371482e+08 -1.715598e+08 -2.046959e+08 -1.983356e+08 -2.359870e+08 -5.082975e+07 -2.899677e+08 -6.386573e+08  1.747996e+08 \n                                                                                                                              \n 3.223106e+08 -3.006195e+09  1.016584e+08 -5.458194e+07 -5.321629e+08 -1.284503e+08  2.323919e+08 -1.505072e+08 ",
        "-1.237231e+08 \n                                                                                                                              \n-5.214018e+08  1.343254e+08 -2.570858e+08  9.167428e+07  1.911409e+08  6.926950e+08 -7.761120e+06 -3.819892e+08 -5.192940e+08 \n                                                                                                                              \n-2.082001e+08 -2.124103e+08  7.324796e+08 -2.541309e+08 -1.605834e+08 -1.075632e+07 -7.284181e+07 -1.272531e+08  6.622737e+07 ",
        "\n                                                                                                                              \n 2.722830e+07  1.207344e+07 -4.504502e+07 -6.096410e+07 -7.096410e+07 -2.738311e+07  8.600058e+06 -6.199005e+07 -3.604090e+08 \n                                                                                                                              \n-1.309756e+08 -7.708846e+07  1.420592e+08  6.425479e+08 -1.404406e+08  3.892610e+08 -2.601401e+08 -4.438394e+08  2.728354e+08 \n              ",
        "                                                                                                                \n 3.388846e+07 -4.664517e+07 -2.968428e+06  1.911351e+08  7.307775e+08 -1.011195e+07  7.684673e+08  5.771844e+08  2.228718e+07 \n                                                                                                                              \n 2.900904e+08 -1.518573e+08  6.251196e+08  7.157013e+08 -1.212088e+08 -2.068867e+08  7.967878e+07  7.650397e+07  5.085481e+08 \n                            ",
        "                                                                                                  \n 1.350279e+06 -3.968651e+08  2.989307e+07 -7.387769e+08 -1.264373e+08  3.215295e+07 -7.211307e+07 -9.467232e+07  1.837806e+08 \n                                                                                                                              \n 9.967247e+07  4.318120e+07  5.787075e+08 -7.117569e+07  8.595611e+07 -2.346283e+07  2.272477e+08  1.802881e+08  7.991644e+08 \n                                          ",
        "                                                                                    \n-1.400121e+08  6.574927e+07  4.577598e+06 -4.864713e+07 -3.983153e+07 -2.655325e+08 -3.586530e+08 -2.016860e+08 -3.480817e+08 \n                                                                                                                              \n-1.844661e+08  4.289084e+08 -2.586396e+08  2.715324e+08 -8.396161e+07 -2.675103e+08  2.507662e+08  1.448154e+08 -1.590054e+08 \n                                                        ",
        "                                                                      \n 2.142342e+08 -1.149857e+08 -7.118750e+08 -8.479694e+07 -1.885379e+07 -8.929951e+08 -2.738852e+07 -1.703361e+08 -4.402769e+06 \n                                                                                                                              \n-1.661606e+08 -3.106216e+08  2.976080e+07 -1.493008e+06 -5.230176e+08 -1.817150e+08  8.925663e+06  4.666605e+07  1.364546e+08 \n                                                                      ",
        "                                                        \n-2.893354e+07 -9.494787e+07 -1.999573e+08 -2.150636e+08 -1.840656e+08  6.074127e+07 -1.715367e+07 -7.599484e+07  4.263100e+07 \n                                                                                                                              \n 1.071997e+09  8.228932e+07  1.006382e+08 -7.716896e+07 -2.658627e+07 -6.630967e+07  1.109595e+09 -1.509697e+08 -8.923029e+07 \n                                                                                    ",
        "                                          \n 5.117384e+08 -9.205349e+06 -2.729662e+08 -2.388751e+08  1.490028e+08 -5.152367e+06 -2.053501e+08 -2.716101e+08 -1.657818e+08 \n                                                                                                                              \n-1.074133e+08 -2.879413e+08 -1.229993e+08 -2.998910e+07 -2.236056e+08  1.251270e+08  2.705806e+08 -1.455843e+08  2.046792e+09 \n                                                                                                  ",
        "                            \n 1.857593e+09  9.082977e+07 -3.684118e+07  6.226741e+07 -2.541083e+07 -3.880341e+07  8.076053e+08 -1.044471e+08 -6.337968e+07 \n                                                                                                                              \n-1.442604e+08  2.060889e+08 -1.234958e+07 -6.092924e+07 -5.123350e+06 -1.041719e+07  1.202839e+08 -2.346763e+08 -1.889624e+08 \n                                                                                                                ",
        "              \n-1.254329e+08 -1.769232e+08  2.108648e+07 -1.323601e+08 -3.351888e+08  3.016700e+08 -9.303058e+07 -1.521975e+08 -4.654497e+07 \n                                                                                                                              \n 3.017415e+07 -1.493572e+08 -1.725503e+08  4.422842e+07 -1.068123e+08 -1.202202e+08  8.397733e+07 -3.182411e+08  5.057136e+07 \n                                                                                                                              ",
        "\n-1.670010e+08 -2.523224e+08 -1.737181e+08 -2.810782e+08  9.772759e+07  2.851425e+08 -1.059593e+08  1.519343e+08  2.054090e+08 \n                                                                                                                              \n 4.862847e+07 -5.905498e+07  4.888676e+08  8.789553e+07 -1.397326e+09  3.140345e+07  4.533307e+08  2.411876e+08  2.821936e+08 \n                                                                                                                              \n 7.320549e+08 ",
        "-3.897918e+07 -1.507686e+07 -1.798165e+08 -1.499309e+08 -2.687363e+07  1.900703e+08 -2.574549e+08 -8.606320e+07 \n                                                                                                                              \n-3.737608e+08  1.642453e+07 -5.196420e+08 -2.017604e+08 -4.311830e+08 -3.351888e+08 -2.322499e+08 -4.943406e+08  6.016177e+08 \n                                                                                                                              \n-1.128013e+08 -2.557795e+08 ",
        "-1.099792e+08 -1.200729e+08  2.864608e+07  1.222402e+08  1.451883e+09  1.014375e+09 -4.128970e+07 \n                                                                                                                              \n-6.593003e+08  5.473430e+06  3.580053e+07 -2.718534e+07  2.050055e+07 -4.654497e+07 -1.042276e+08 -2.954660e+08 -7.995981e+07 \n                                                                                                                              \n-8.429436e+07 -1.306595e+08 -3.461182e+07 ",
        "-1.407605e+08 -5.099953e+08  1.022335e+08  1.114438e+08  1.829307e+08 -1.196951e+07 \n                                                                                                                              \n 5.797695e+08 -6.412158e+07  6.778020e+08  1.569788e+09  1.101327e+08  1.536787e+09  4.217579e+07  7.072892e+07  3.284255e+08 \n                                                                                                                              \n 7.656707e+08  5.337135e+08  4.956077e+08  2.186675e+07 ",
        " 1.001249e+09  3.785796e+08  3.519403e+08  4.095254e+08 -1.250789e+07 \n                                                                                                                              \n 1.053178e+08 -1.250789e+07  1.270941e+08 -2.474530e+08 -4.921153e+08 -9.114497e+06 -1.154783e+08 -1.518972e+08  1.395962e+08 \n                                                                                                                              \n-6.178681e+07  1.082115e+10 -5.494857e+08 -3.819904e+08  1.997339e+08 ",
        " 9.555238e+07  4.600646e+07 -1.035101e+07  4.794188e+07 \n                                                                                                                              \n-3.700359e+06 -6.343119e+07 -3.238589e+07 -4.207484e+07 -1.047869e+08 -2.282620e+08 -1.285348e+08  3.496248e+07  2.402659e+08 \n                                                                                                                              \n-3.659793e+07 -1.103808e+08 -4.550219e+07  2.034620e+08  1.958245e+08  1.622519e+08 ",
        " 4.130190e+08 -1.320381e+07  8.338017e+07 \n                                                                                                                              \n-1.263985e+08 -9.064049e+07 -9.064049e+07 -1.827482e+08  2.672330e+08 -4.084627e+08 -1.005880e+08  9.126598e+08  5.382723e+08 \n                                                                                                                              \n 6.623882e+08 -5.615159e+08 -9.150298e+08 -1.477154e+08  1.184240e+08 -3.097013e+07 -9.787198e+07 ",
        " 1.256249e+08 -6.424208e+07 \n                                                                                                                              \n-2.541606e+08 -1.111446e+08 -2.445180e+08 -2.827866e+08 -3.492835e+08 -2.142922e+06 -2.310215e+08  2.468358e+08  5.102300e+07 \n                                                                                                                              \n-2.047908e+07 -6.372208e+07 -2.543222e+08 -5.394719e+08 -2.487808e+08 -2.552422e+08 -2.064448e+08 -1.613444e+08 ",
        "-2.468936e+07 \n                                                                                                                              \n 1.770268e+08  3.868524e+08  9.820588e+07  7.217064e+07 -2.737529e+08 -2.376134e+08  8.685998e+05 -1.446085e+08 -7.323247e+07 \n                                                                                                                              \n-9.229225e+07 -4.045666e+07 -3.667665e+08 -2.841514e+08 -6.284465e+07 -7.194269e+07 -7.194269e+07 -1.970366e+07 -2.597319e+08 ",
        "\n                                                                                                                              \n-5.576545e+07 -2.385585e+08  9.448128e+07  1.622710e+08  2.118662e+07  1.574872e+08 -9.183757e+07  1.527263e+08 -2.506925e+08 \n                                                                                                                              \n 8.540084e+07  9.310723e+07 -1.412848e+08 -4.966535e+07 -3.024570e+08 -1.147894e+08 -2.264389e+08 -1.770894e+08 -5.105563e+08 \n              ",
        "                                                                                                                \n-2.958939e+08 -6.608201e+08 -6.408201e+08 -6.408201e+08 -5.824825e+08 -1.152643e+09 -3.634717e+08  9.266870e+06 -1.194972e+08 \n                                                                                                                              \n-1.215290e+08 -2.838106e+08 -2.036646e+08 -1.552586e+08 -1.386343e+08 -2.080795e+08 -2.391790e+08  6.638801e+06 -6.752387e+08 \n                            ",
        "                                                                                                  \n-7.840087e+08 -6.036709e+07 -8.951005e+07  5.715484e+07  2.496481e+07 -2.210238e+08 -1.496431e+08 -2.283932e+08  2.617351e+07 \n                                                                                                                              \n-9.228557e+07  9.943210e+06  4.591983e+07 -9.539762e+07  9.058744e+07  1.383073e+09 -9.398408e+07 -3.135439e+07 -3.186433e+07 \n                                          ",
        "                                                                                    \n 5.444820e+08  1.543614e+08 -4.638057e+07 -2.738713e+08  1.004383e+08  2.256530e+08 -1.400187e+09  9.252906e+08  2.975511e+08 \n                                                                                                                              \n-1.947494e+08 -1.028672e+08  5.373128e+08  2.113968e+07  2.807149e+08  1.325467e+07 -2.199178e+08  1.666109e+08 -2.998447e+08 \n                                                        ",
        "                                                                      \n-1.266571e+08 -9.166556e+07 -1.065074e+08 -3.203035e+08  7.516664e+07 -2.028686e+08  1.345700e+08 -4.406117e+07 -1.517472e+08 \n                                                                                                                              \n-7.833652e+08 -3.775725e+07 -4.641788e+08 -1.963367e+08 -6.468941e+08 -3.212201e+08  4.149262e+06 -1.261718e+08  3.902859e+07 \n                                                                      ",
        "                                                        \n 1.708429e+08  1.027625e+08 -3.006246e+07  3.121788e+08 -9.081510e+07  9.901285e+07  2.400083e+08  1.035863e+07 -1.037761e+08 \n                                                                                                                              \n 2.414963e+08  3.099147e+08  1.793686e+08 -3.673915e+07 -2.497264e+08  3.042249e+08 -3.763012e+08 -4.020161e+08 -1.175659e+07 \n                                                                                    ",
        "                                          \n-1.002739e+07  7.784876e+07 -1.170886e+08 -3.136893e+08 -9.686465e+07 -6.966941e+07 -1.691133e+08 -1.600211e+08  9.387787e+08 \n                                                                                                                              \n-4.138233e+08  3.799076e+08 -2.441749e+08 -2.748802e+07  2.649133e+08 -1.999373e+06  1.882746e+09  2.497512e+08  1.201515e+09 \n                                                                                                  ",
        "                            \n-4.958174e+07  3.660420e+08  8.701437e+07  2.429530e+08  1.639485e+08 -1.226939e+08  2.644624e+08  3.590220e+07  9.452277e+08 \n                                                                                                                              \n-1.089098e+06  6.231705e+08  1.439106e+08  2.042316e+08  4.695191e+08  1.374300e+09  4.127127e+08 -5.476526e+07 -1.006377e+08 \n                                                                                                                ",
        "              \n 3.574462e+08  7.954403e+08  3.440419e+07 -2.347122e+08 -5.471389e+07 -2.732975e+08  3.423582e+07 -6.445787e+07 -1.102255e+08 \n                                                                                                                              \n 6.518140e+06 -1.669523e+08 -3.560804e+06 -5.368811e+08 -1.366257e+08 -5.518609e+07 -3.108467e+08  8.222232e+08 -1.076667e+08 \n                                                                                                                              ",
        "\n-1.601011e+08  1.050706e+07 -1.484458e+08 -2.085883e+08  4.499522e+07 -2.162717e+08 -1.472529e+08 -2.173001e+08 -1.521008e+08 \n                                                                                                                              \n-1.242903e+08 -1.813733e+08 -2.015876e+08  3.418918e+07 -3.637681e+08 -2.370279e+08  8.122093e+07 -1.236854e+09  6.921217e+08 \n                                                                                                                              \n-3.021051e+08 ",
        " 1.968214e+07 -1.341208e+08 -1.891102e+08 -2.604201e+08  5.186589e+07 -1.585294e+09  1.368157e+09 -3.586541e+08 \n                                                                                                                              \n-6.859754e+08 -5.288581e+07 -1.710926e+08 -2.549421e+08  8.560208e+06 -2.358227e+07  1.023967e+08 -1.100728e+08 -1.126982e+08 \n                                                                                                                              \n-7.892337e+07 -2.502445e+08 ",
        "-5.252558e+08 -1.744128e+08 -1.871479e+07  5.812523e+07 -6.844881e+08 -1.802473e+09 -2.388767e+07 \n                                                                                                                              \n-4.752877e+07 -1.266503e+08 -6.715605e+07 -3.803253e+07 -4.552912e+07  9.963057e+06 -6.390316e+07 -2.128328e+08 -7.099332e+07 \n                                                                                                                              \n-1.482686e+08 -2.275601e+08 -2.358772e+08 ",
        "-6.189768e+08 -2.840248e+08 -6.482004e+07 -3.461837e+08  1.039719e+08  8.953130e+07 \n                                                                                                                              \n 4.746802e+07  4.173838e+08  8.148177e+07  2.932444e+08  2.053100e+08 -6.342380e+08 -6.495038e+08 -1.729374e+08 -4.204294e+07 \n                                                                                                                              \n-1.961250e+08  2.861826e+06 -1.023017e+08 -1.143552e+08 ",
        "-1.811054e+08 -5.862540e+08 -6.395496e+08 -2.629264e+08 -2.104692e+08 \n                                                                                                                              \n-3.573799e+08 -1.071524e+09 -1.172604e+09 -2.107830e+08  1.495019e+09 -1.352809e+09  1.117531e+08 -2.530110e+08 -2.149414e+08 \n                                                                                                                              \n-1.942012e+08 -1.483003e+07  2.109675e+08  4.510709e+08 -8.814776e+07 ",
        " 1.404932e+08  6.948156e+07 -1.125561e+06 -5.930183e+07 \n                                                                                                                              \n 2.700729e+08 -6.616550e+07 -3.103784e+07 -1.071434e+08 -3.625560e+08  5.258571e+07 -1.788371e+08 -2.952053e+08 -9.898129e+07 \n                                                                                                                              \n 1.699595e+07 -2.846699e+07 -5.618877e+07 -2.037237e+08 -1.443375e+07  3.850571e+08 ",
        "-2.699979e+07  1.101656e+08 -5.171001e+08 \n                                                                                                                              \n-4.283622e+08  1.867559e+08 -4.896608e+07 -7.678006e+08 -7.644357e+08 -5.698192e+08 -7.950532e+08 -8.287197e+08 -2.159966e+08 \n                                                                                                                              \n 1.509645e+08 -1.611402e+08  3.334306e+07 -4.526680e+07 -6.171737e+07  1.771726e+08 -2.000418e+08 ",
        " 5.331233e+08 -1.358675e+08 \n                                                                                                                              \n-1.705474e+08 -1.177483e+08 -6.294904e+07 -2.015894e+08 -1.984136e+08  3.126388e+08  6.302467e+07 -1.681757e+08 -1.045074e+08 \n                                                                                                                              \n 2.828953e+08 -4.427954e+08  1.765256e+07 -3.131460e+07  2.404399e+08  8.300651e+07  5.731174e+08  9.700951e+06 ",
        " 2.144871e+08 \n                                                                                                                              \n 1.712485e+08  3.832277e+08 -1.866222e+08  1.188985e+08 -1.945466e+08  2.632072e+09  8.873617e+07  8.441033e+07 -1.058366e+08 \n                                                                                                                              \n 8.476634e+06 -1.063297e+07 -5.651531e+08 -6.498953e+07 -4.293006e+08 -1.568832e+09 -7.363639e+07  3.976157e+08 -2.420638e+08 ",
        "\n              \n-5.575767e+08 \n [ reached getOption(\"max.print\") -- omitted 53577 entries ]\n",
        "> ",
        "m1_price[[\"fitted.values\"]]",
        "         1          2          3          4          5          6          7          8          9         10         11 \n 961275130 1068179523 3198818066  378058413  802771306  400376965 1757143290 1322242812 1754501766 1494589574 1783847160 \n        12         13         14         15         16         17         18         19         20         21         22 \n 460140211  717917691 1306186228  423313779  414008538  373124330  696805173  119142098  691597673  410150481 1018992801 \n        23         24         25 ",
        "        26         27         28         29         30         31         32         33 \n 400676537 1586414724 1095046644  450452882  410516148  407302009  418308538  425635917  732345729  424398748 1011381463 \n        34         35         36         37         38         39         40         41         42         43         44 \n 901826614 1934555208  397464117  527024471  126414079  152028565  134191533  149613833  364851465 1035676349  146051426 \n        45         46         47         48         49         50 ",
        "        51         52         53         54         55 \n 106513792 1007662719  419971881 1061352162  717358504  483076653  704985882 1319043326  697691174  129198546 1901540269 \n        56         57         58         59         60         61         62         63         64         65         66 \n 422019411 1337887173  394180207  606555053  412815239  412100034  784391807  393389222  667749469  688673650  920241638 \n        67         68         69         70         71         72         73         74         75 ",
        "        76         77 \n 712052417  674064558  674064558  405757402 1160986917 1017328001 1019308473  412723846  419678011  462000683 1521306716 \n        78         79         80         81         82         83         84         85         86         87         88 \n 728545426 2346284199  411506573  743129439  447004435  131508448  364705760 1114241821 1260262971  822403781  485234526 \n        89         90         91         92         93         94         95         96         97         98         99 \n1080875432 ",
        "1295210741  908435039  448054920 1980124072  415568642  402186783  668171022  838686625  129620223 1192799287 \n       100        101        102        103        104        105        106        107        108        109        110 \n 398288259  144371879  694665680  360035106  416625442  251025711  396974549  460725868  372312862  364384471  672420462 \n       111        112        113        114        115        116        117        118        119        120        121 \n 417471189  690301976  397935337  690301976 ",
        " 726682423 1417390408  530460127  574589411  612741856  615454126  621076481 \n       122        123        124        125        126        127        128        129        130        131        132 \n 838412142  835299553  580629275  836890558  833568643 1288683287  933830703  434342197  150206891  123128290  161199654 \n       133        134        135        136        137        138        139        140        141        142        143 \n 412423736  711393758  124088396  108104658  700905913 2385528723  759278830 ",
        " 999468017  396090823  144237118  362118905 \n       144        145        146        147        148        149        150        151        152        153        154 \n1096118788  748180433  388899889  393635467  413710754  448201516  418070036  418070036 1067292755  714799422  601182472 \n       155        156        157        158        159        160        161        162        163        164        165 \n 396316140  276959690  144241973  611895267  407803720  153679385  497844211  468770542  477699496   19281912 ",
        " 805223794 \n       166        167        168        169        170        171        172        173        174        175        176 \n 447266002 1203321462  616606287  773856956  436390611  519639037  720846677 3322558137  663512614  391226085  113363550 \n       177        178        179        180        181        182        183        184        185        186        187 \n 856742319 1000068558 1325387435  997460642  846593261  440751453  413679928  377691430  107213415  382409096  461495423 \n       188        189 ",
        "       190        191        192        193        194        195        196        197        198 \n1129570187  480344536  813080589  688041794  123310425  157591016  842124677  779949610 1008894866 1089801467  657405198 \n       199        200        201        202        203        204        205        206        207        208        209 \n 804041445  413771527  143613743  403076585  455828656  280523077  395740724  365755532  367805738  648546875  398675266 \n       210        211        212        213        214 ",
        "       215        216        217        218        219        220 \n 376779735  872147044  404041082  464428917  458425788  526826536  518568813  399508870  445119078  625061451  360760302 \n       221        222        223        224        225        226        227        228        229        230        231 \n 632804963  657023028 1611022721  928963107 1072210797  501919874 1794621422  636196033  768760560  678725130  857839462 \n       232        233        234        235        236        237        238        239 ",
        "       240        241        242 \n 621869431  630213904  725130239 1882932948 1028484585  841845785  613909881  497486043  679333199  593477878 1163644906 \n       243        244        245        246        247        248        249        250        251        252        253 \n 988860005  969401163  860839723 1184429713  977457999 1137866350  977084205 1011282353 1383863853  733647293 1338456589 \n       254        255        256        257        258        259        260        261        262        263        264 ",
        "\n1363016299 3529801157 1914667153 1972389643 1677546064 3466626294 1790158683 2115034893 1770733824  522035522 1102037880 \n       265        266        267        268        269        270        271        272        273        274        275 \n2430572275 1017278216  389042521 2216705469  681041442  399413128 4397297493  143205821  360831050  124517574  709742095 \n       276        277        278        279        280        281        282        283        284        285        286 \n2701561686  851452869 2190616228 ",
        " 423801195 1906395532  761271340  411870436  685353387  745508756  450886504  960495411 \n       287        288        289        290        291        292        293        294        295        296        297 \n 731932626  724518060  730683022  516965042  976091607  437702981  712809270  447397792  378911853  894830263 1105984685 \n       298        299        300        301        302        303        304        305        306        307        308 \n 932129415  382119376  386118098  378120654  362200100  132504247 ",
        "1134009198 1183317995  822641292 1077563926 4438489748 \n       309        310        311        312        313        314        315        316        317        318        319 \n 475337917  411599744 1237399156  639189994 1064255288  798041565  654654208 1271872720  863356700  662816037  785310430 \n       320        321        322        323        324        325        326        327        328        329        330 \n 135931328  699940369  455187940  957647090 1265258466  734973467  628008127 1515445878  940211659 ",
        " 656293206  458302777 \n       331        332        333        334        335        336        337        338        339        340        341 \n 414212379  875045552  380151221  399374257  424696617  401558970  392710040  392710040  403811032  408227522  657752664 \n       342        343        344        345        346        347        348        349        350        351        352 \n 707092296  361948995  418987467  795309543 1246079804  386733372 1209159554 1457567739 1360473886  159214240 1514097030 \n       353 ",
        "       354        355        356        357        358        359        360        361        362        363 \n 778838146  470520922  115557133  567689241  701281301  808783160  799957168  694005249  807278055  998031176 1071638678 \n       364        365        366        367        368        369        370        371        372        373        374 \n1172157397  401553228  404075525  426831431  145478113  826763638  917015832 1797519398  426787994 1213690399 1426476374 \n       375        376        377        378 ",
        "       379        380        381        382        383        384        385 \n 134885524  499756542  943117675  708500928 1248834224 1356170253  818580617  362270035  375413006  390049057  170221534 \n       386        387        388        389        390        391        392        393        394        395        396 \n 665543710  797957807  386744549  141601470  671482330  405065737  416457657 1062515399  652564605  738243101 1218512718 \n       397        398        399        400        401        402        403 ",
        "       404        405        406        407 \n 375559667  869049865  694733139  475465678  720767580  363441033  446080824 1082055364 1096248852  583883302 1162714963 \n       408        409        410        411        412        413        414        415        416        417        418 \n1448975884  391619192  145793679 2801365738  504824090  406825528  532379125  382222603  656392649   61164544  128158081 \n       419        420        421        422        423        424        425        426        427        428 ",
        "       429 \n1216190575  712932459  488217091  531267614  140389518  786241541  421542470  615134032  355969874  460907001  116146129 \n       430        431        432        433        434        435        436        437        438        439        440 \n 165183313  523642004  124224844  926676642  714266971 1295447448  668281668  453667147  813757615 2046607910  433183982 \n       441        442        443        444        445        446        447        448        449        450        451 \n 435976747 1236944215 ",
        " 506474272  726413980  685472359  168276714  422110633  732009585  647436541  399089110  855363496 \n       452        453        454        455        456        457        458        459        460        461        462 \n 689046424  459917683  396543631  737657784  822184610 1325629176  742117689 1551482826 1139945837  856831746  403606276 \n       463        464        465        466        467        468        469        470        471        472        473 \n 414271568  671290886  146115709 1692221813  390660674 ",
        " 679757439  400686510 1040571880 1059145531  372233759  172129079 \n       474        475        476        477        478        479        480        481        482        483        484 \n 137259305  365898670  350327941  383116226  437170955  393235650  876709116  708466749  620504781 1377769893 1084662877 \n       485        486        487        488        489        490        491        492        493        494        495 \n 448003386  413222554  320531079  380350478  419288355  321514581  438661927  655915438 ",
        " 712395250  664077309  584512321 \n       496        497        498        499        500        501        502        503        504        505        506 \n 663030213  698327129  730259231  926551238  998286726  121443566  682207578  643933298  121251204  147195947  410513506 \n       507        508        509        510        511        512        513        514        515        516        517 \n 959700315 1162656284 2709853870  566862241 1086842673 1109627752  916554118 1367681200  216639236  162201919  726254936 ",
        "\n       518        519        520        521        522        523        524        525        526        527        528 \n1393750248  422269317 2619015731  383408133  534428177  689901972  830762850 1487414127  370269053  699166189  620504781 \n       529        530        531        532        533        534        535        536        537        538        539 \n 661329298 2504803900 1248004025  378792200  560692720  391192397  533438142  382565371  572736214  444859189 1386482527 \n       540        541        542 ",
        "       543        544        545        546        547        548        549        550 \n 279748499 1520593367  943088489  411201998  423633424  425920359  413222554  696567276 1089331367 1025950414  441063680 \n       551        552        553        554        555        556        557        558        559        560        561 \n 641371181 1451908370  986554230 1255588348  896195520  760388766  123850061  240190728 1720631228  460220963 1321598577 \n       562        563        564        565        566        567 ",
        "       568        569        570        571        572 \n1177888050  985927624  970559482 1505604936  446568095  967375987 1094506318  538879939  441158884  455392206  677948019 \n       573        574        575        576        577        578        579        580        581        582        583 \n 718061726  475217566 1538655802  170276290  146479080  170276290  769816266  383868942 1243357909  166747360  177604887 \n       584        585        586        587        588        589        590        591        592 ",
        "       593        594 \n 476450593  208606077 1310960897 2189518547  978660467  893129688  416853134  191669376  120670366  115949719  448752146 \n       595        596        597        598        599        600        601        602        603        604        605 \n 397967747  399764386  489524546  438818633  421438184  450572214  384691609  416499113  476782759  428222259  406722478 \n       606        607        608        609        610        611        612        613        614        615        616 \n 437183166 ",
        " 453912659  390491148  399944340  469444569  523855996  450997520  428014889  351383798  351383798  759555202 \n       617        618        619        620        621        622        623        624        625        626        627 \n 810129885  654210685  936052199 1122280064 1008000098 1114880739 2008104213 1459588866  358591837  133975696  383177415 \n       628        629        630        631        632        633        634        635        636        637        638 \n 414187275  771463711  441069117  382222603 ",
        " 417587317  411489019 1069590748  750865304  438942592  677069185  820766363 \n       639        640        641        642        643        644        645        646        647        648        649 \n 145862007  706982413  408741933  680860516 2032936870  846326318  363385812  382754069  387968939  151682922 1322168862 \n       650        651        652        653        654        655        656        657        658        659        660 \n1410130258  448859673  616147839  684989759  698985286 1146702501  426389296 ",
        " 404873731  398875648  467553335  642525772 \n       661        662        663        664        665        666        667        668        669        670        671 \n 645002539  810091073  410668333  410668333  907888533 1056243838  422512314  654665807  802651942 1034737619  125783402 \n       672        673        674        675        676        677        678        679        680        681        682 \n 418089770  403187221  442082102  644342650  141900687  723274272  687383633  456869218  666100990  401057276 ",
        " 672722205 \n       683        684        685        686        687        688        689        690        691        692        693 \n 514940657  841519393  634902316 1088123689 1088123689 1088123689 1479104804 4478329082 1137759529  117443529  410970076 \n       694        695        696        697        698        699        700        701        702        703        704 \n 891426084  558541206  725120228 1113031612  384974532 1057709018  730618972 1292450510 1657542653 1111313160  401837423 \n       705        706 ",
        "       707        708        709        710        711        712        713        714        715 \n 695522088  454976326 1220248521  666738604  395828293 1206550572  652576095  388884585  437131952 1152446969  391888363 \n       716        717        718        719        720        721        722        723        724        725        726 \n 786440689 2118151860  838520010  392584333  479293729  280613390  691881393  219599351  919083056  415196891  422073837 \n       727        728        729        730        731 ",
        "       732        733        734        735        736        737 \n2266385108 1374124244 1396368836  708474601  951347482 1763953209 1209730368 1368898643  493878703  766619148  810808455 \n       738        739        740        741        742        743        744        745        746        747        748 \n 655797395  382802027  667522268  702735803 1311075729 1218849177  714075658  172889855  390322443  347723732 1182277657 \n       749        750        751        752        753        754        755        756 ",
        "       757        758        759 \n 149613833  781146423 1174758568 1474456059 1047810766  412377671  433327717  417702871  343797504  764097575  431997936 \n       760        761        762        763        764        765        766        767        768        769        770 \n 113963432  412755904  178785258  558029961  355594321  374955079  505864200  547850781  417166552 1534834245  706442220 \n       771        772        773        774        775        776        777        778        779        780        781 ",
        "\n 483061669  611557900 1018157921  378054656  436682756  698381736  368123389  669919190  373030444  395968644  644959571 \n       782        783        784        785        786        787        788        789        790        791        792 \n 396218130 1360685527  969714623 1268906794 1131507450  722796866  936571865  718547555 1616110227 1031560284  896760058 \n       793        794        795        796        797        798        799        800        801        802        803 \n 715913745 1431173796  500424743 ",
        " 403757193  148255296  389495231  833212013  380489371  998065097  463310332  224545002 \n       804        805        806        807        808        809        810        811        812        813        814 \n 203637607  462674449  727005705 1426065566  885354244  650422033  697588487  840209415 1485541505  941260018  421416958 \n       815        816        817        818        819        820        821        822        823        824        825 \n 751316227  397841151  462912635  390731673  396490443  720149059 ",
        " 733380083  425359517 1437038287  844264599  202645065 \n       826        827        828        829        830        831        832        833        834        835        836 \n 686808368 1326984941  414624999  716453810  126197736  394696175  653593759  471003964  692330481  774094317  368227076 \n       837        838        839        840        841        842        843        844        845        846        847 \n 388220686  731385921  352258811  712800061  122843642  674845328  814321775 1267840031 2449277411 ",
        "2463093169  408601979 \n       848        849        850        851        852        853        854        855        856        857        858 \n 132075900  386221325  395749188  416893669  119880603 1971220080 1132149630  593473996  929710912  144878396  392315432 \n       859        860        861        862        863        864        865        866        867        868        869 \n 360993828  468635535  440150374  760972642  635860329  678693201  725329491 1092397529 1270980027  511660433 1415979569 \n       870 ",
        "       871        872        873        874        875        876        877        878        879        880 \n 153895816 1135132867 2254443505  400355384  424282946  383143790  423895329  505370893  417183118  477100974  360086140 \n       881        882        883        884        885        886        887        888        889        890        891 \n 678949457  657015143  694466939  754571799 1042433824 1116240516  929642088 1361606612 1191081906  112299699  609034714 \n       892        893        894        895 ",
        "       896        897        898        899        900        901        902 \n 398945554  880503163  664661202 1642892013  492156545  953005621  988603585  415355000  418521510  367181110  443725388 \n       903        904        905        906        907        908        909        910        911        912        913 \n 397104619  483030268  377144881  768154858  852385362  678810925 1056897665  988716703 1388540094 2025626537 1104549221 \n       914        915        916        917        918        919        920 ",
        "       921        922        923        924 \n1655110764 2248970946  820433161  444809209  404215574  939749935  172860636  431222526  516519984  394741704  116344313 \n       925        926        927        928        929        930        931        932        933        934        935 \n  97016128  407882379  675337300  421637130  438344750  437733570  637771145  447276359  754180977  354644973  650819871 \n       936        937        938        939        940        941        942        943        944        945 ",
        "       946 \n 400216852  434701522  723814944  488276295  347606224  471808884 1061902204  484159209  733556513  703415320  694328407 \n       947        948        949        950        951        952        953        954        955        956        957 \n 561000260  846582154 1023940868 1019464740  867318001 1320862709 1152623184  351867049  136174601  657167899  393314266 \n       958        959        960        961        962        963        964        965        966        967        968 \n 422050232  710514520 ",
        " 454658884  660929612 1114056543  802273704  381764321  404074532  699154927 1048613390  745598201 \n       969        970        971        972        973        974        975        976        977        978        979 \n 885311469  733463862  704530567  431364239 1210519998 1669141268  678384959  183793914  456995603  403465656  524973876 \n       980        981        982        983        984        985        986        987        988        989        990 \n 686654173  412265499  576705140 1194990417  504581033 ",
        " 980224488  710976550 1468783720  128331727  183398844  371964652 \n       991        992        993        994        995        996        997        998        999       1000 \n 438600624  686532970 1502950032  376100723  720641698 2776515092  465660356 1092902278  398342335  951968559 \n [ reached getOption(\"max.print\") -- omitted 53577 entries ]\n",
        "> ",
        "View(m1_price[[\"model\"]])",
        "> ",
        "m1_price",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + luces_2021 + \n    rooms + bathrooms, data = data_regresiones)\n\nCoefficients:\n  (Intercept)      dist_park  surface_total     luces_2021          rooms      bathrooms  \n   -9.761e+09      6.842e+04      1.999e+06      1.520e+08     -4.476e+06      2.266e+08  \n\n",
        "> ",
        "m1_price[[\"coefficients\"]]",
        "  (Intercept)     dist_park surface_total    luces_2021         rooms     bathrooms \n-9.760992e+09  6.842058e+04  1.999361e+06  1.520232e+08 -4.476128e+06  2.266107e+08 \n",
        "> ",
        "m1_price",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + luces_2021 + \n    rooms + bathrooms, data = data_regresiones)\n\nCoefficients:\n  (Intercept)      dist_park  surface_total     luces_2021          rooms      bathrooms  \n   -9.761e+09      6.842e+04      1.999e+06      1.520e+08     -4.476e+06      2.266e+08  \n\n",
        "> ",
        "Coeficiente_m1 <- m1_price[[\"coefficients\"]]",
        "> ",
        "coeficientes_modelos = bind_rows(m1_price,m2_price,m3_price, .id = \"coefficients\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`bind_rows()`\u001B[39m:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Argument 1 must be a data frame or a named atomic vector.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "coeficientes_modelos = bind_rows(m1_price,m2_price,m3_price, .id = \"coefficients\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`bind_rows()`\u001B[39m:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Argument 1 must be a data frame or a named atomic vector.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "## get Bogota-UPZ ",
        "> ",
        "bog <- opq(bbox = getbb(\"Bogota Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"boundary\", value=\"administrative\") %>% ",
        "+ ",
        "  osmdata_sf()",
        "> ",
        "bog <- bog$osm_multipolygons %>% subset(admin_level==9)",
        "> ",
        "bog <- import(\"output/bog_upz.rds\")",
        "Error in import(\"output/bog_upz.rds\") : No such file\n",
        "> ",
        "ggplot() + geom_sf(data=bog)",
        "> ",
        "bog$normal <- rnorm(nrow(bog),100,10)",
        "> ",
        "ggplot() + geom_sf(data=bog , aes(fill=normal))",
        "> ",
        "map <- ggplot() + geom_sf(data=bog , aes(fill=normal)) +",
        "+ ",
        "  scale_fill_viridis(option = \"A\" , name = \"Variable\")",
        "> ",
        "map ",
        "> ",
        "map <- map +",
        "+ ",
        "  scalebar(data = bog , dist = 5 , transform = T , dist_unit = \"km\") +",
        "+ ",
        "  north(data = bog , location = \"topleft\")",
        "Error in plot.xy(xy.coords(x, y), type = type, ...) : \n  plot.new has not been called yet\n",
        "> ",
        "map ",
        "> ",
        "map <- map + theme_linedraw() + labs(x=\"\" , y=\"\")",
        "> ",
        "map",
        "> ",
        "osm_layer <- get_stamenmap(bbox = as.vector(st_bbox(bog)), ",
        "+ ",
        "                           maptype=\"toner\", source=\"osm\", zoom=13) ",
        "\u001B[36mi\u001B[39m Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under ODbL.\n\u001B[36mi\u001B[39m 50 tiles needed, this may take a while (try a smaller zoom?)\n",
        "> ",
        "map2 <- ggmap(osm_layer) + ",
        "+ ",
        "  geom_sf(data=bog , aes(fill=normal) , alpha=0.3 , inherit.aes=F) +",
        "+ ",
        "  scale_fill_viridis(option = \"D\" , name = \"Variable\") +",
        "+ ",
        "  scalebar(data = bog , dist = 5 , transform = T , dist_unit = \"km\") +",
        "+ ",
        "  north(data = bog , location = \"topleft\") + theme_linedraw() + labs(x=\"\" , y=\"\")",
        "Coordinate system already present. Adding new coordinate system, which will replace the existing one.\n",
        "Error in plot.xy(xy.coords(x, y), type = type, ...) : \n  plot.new has not been called yet\n",
        "> ",
        "map2",
        "function (.x, .y, .f, ...) \n{\n    .f <- as_mapper(.f, ...)\n    .Call(map2_impl, environment(), \".x\", \".y\", \".f\", \n        \"list\")\n}\n<bytecode: 0x00000265f39dc420>\n<environment: namespace:purrr>\n",
        "> ",
        "## get Armenia Mapa ",
        "> ",
        "armenia <- opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"boundary\", value=\"administrative\") %>% ",
        "+ ",
        "  osmdata_sf()",
        "> ",
        "armenia <- arm$osm_multipolygons %>% subset(admin_level==9)",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'subset': object 'arm' not found\n",
        "> ",
        "armenia <- import(\"output/armenia_mp.rds\")",
        "Error in import(\"output/armenia_mp.rds\") : No such file\n",
        "> ",
        "armenia <- export(\"output/armenia_mp.rds\")",
        "Error in export(\"output/armenia_mp.rds\") : \n  Must specify 'file' and/or 'format'\n",
        "> ",
        "armenia <- opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"boundary\", value=\"administrative\") %>% ",
        "+ ",
        "  osmdata_sf()",
        "> ",
        "armenia <- arm$osm_multipolygons %>% subset(admin_level==9)",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'subset': object 'arm' not found\n",
        "> ",
        "## get Armenia Mapa ",
        "> ",
        "armenia <- opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"boundary\", value=\"administrative\") %>% ",
        "+ ",
        "  osmdata_sf()",
        "> ",
        "armenia <- armenia$osm_multipolygons %>% subset(admin_level==9)",
        "> ",
        "armenia <- import(\"output/armenia_mp.rds\")",
        "Error in import(\"output/armenia_mp.rds\") : No such file\n",
        "> ",
        "ggplot() + geom_sf(data=armenia)",
        "> ",
        "armenia <- opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "available_features() %>% head(100)",
        "Error in h(simpleError(msg, call)) : \n  error in evaluating the argument 'x' in selecting a method for function 'head': unused argument (.)\n",
        "> ",
        "available_tags(\"amenity\") %>% head(20)",
        " [1] \"animal_boarding\"        \"animal_breeding\"        \"animal_shelter\"         \"arts_centre\"           \n [5] \"atm\"                    \"baby_hatch\"             \"baking_oven\"            \"bank\"                  \n [9] \"bar\"                    \"bbq\"                    \"bench\"                  \"bicycle_parking\"       \n[13] \"bicycle_rental\"         \"bicycle_repair_station\" \"biergarten\"             \"boat_rental\"           \n[17] \"boat_sharing\"           \"brothel\"                \"bureau_de_change\"       \"bus_station\"           ",
        "\n",
        "> ",
        "opq(bbox = getbb(\"Armenia Colombia\"))",
        "$bbox\n[1] \"4.4934618,-75.7195038,4.5881794,-75.6324993\"\n\n$prefix\n[1] \"[out:xml][timeout:25];\\n(\\n\"\n\n$suffix\n[1] \");\\n(._;>;);\\nout body;\"\n\n$features\nNULL\n\nattr(,\"class\")\n[1] \"list\"           \"overpass_query\"\nattr(,\"nodes_only\")\n[1] FALSE\n",
        "> ",
        "osm = opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key=\"amenity\" , value=\"restaurant\") #En internet encontramos cÃ³mo encontrar los datos de los restaurantes en openstreetmap. (https://wiki.openstreetmap.org/wiki/Tag:amenity%3Drestaurant)",
        "> ",
        "class(osm)",
        "[1] \"list\"           \"overpass_query\"\n",
        "> ",
        "osm_sf = osm %>% osmdata_sf() ## extraer Simple Features Collection",
        "> ",
        "osm_sf",
        "Object of class 'osmdata' with:\n                 $bbox : 4.4934618,-75.7195038,4.5881794,-75.6324993\n        $overpass_call : The call submitted to the overpass API\n                 $meta : metadata including timestamp and version numbers\n           $osm_points : 'sf' Simple Features Collection with 315 points\n            $osm_lines : NULL\n         $osm_polygons : 'sf' Simple Features Collection with 35 polygons\n       $osm_multilines : NULL\n    $osm_multipolygons : NULL\n\n",
        "> ",
        "restaurant = osm_sf$osm_points %>% select(osm_id,amenity)#Obtenemos el objeto ",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘select’ for signature ‘\"sf\"’\n",
        "> ",
        "## Parques de Armenia",
        "> ",
        "parques <- opq(bbox = getbb(\"Armenia Colombia\")) %>%",
        "+ ",
        "  add_osm_feature(key = \"leisure\", value = \"park\") %>%",
        "+ ",
        "  osmdata_sf() %>% .$osm_polygons %>% select(osm_id,name)",
        "Error in (function (classes, fdef, mtable)  : \n  unable to find an inherited method for function ‘select’ for signature ‘\"sf\"’\n",
        "> ",
        "##################################Angela Segura Cod. 201619956   R version 4.1.3 ############################################",
        "> ",
        "",
        "> ",
        "##Taller Pset_3####",
        "> ",
        "R.version.string #Visualizar la version de R",
        "[1] \"R version 4.1.3 (2022-03-10)\"\n",
        "> ",
        "###Crear directorio de trabajo##",
        "> ",
        "dir.create(\"code\") #Creamos carpeta llamada code, donde guardaremos el script",
        "Warning message:\n",
        "In dir.create(\"code\") :",
        " 'code' already exists\n",
        "> ",
        "dir.create(\"output\") #Creamos la carpeta output para los datos procesados",
        "Warning message:\n",
        "In dir.create(\"output\") :",
        " 'output' already exists\n",
        "> ",
        "list.files() ## Revisamos con que carpetas estamos trabajando#",
        "[1] \"code\"            \"input\"           \"myMap_inset.png\" \"output\"          \"pset-3.pdf\"      \"pset-3.Rproj\"   \n[7] \"README.md\"      \n",
        "> ",
        "##El script lo guardamos manualmente en la carpeta de code con el nombre Scriptrespuesta##",
        "> ",
        "",
        "> ",
        "###Instalar librerias##",
        "> ",
        "require(pacman) ",
        "> ",
        "install.packages(\"tm\") #Tm y wordcloud se descargan para crear la nube de palabras",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"wordcloud\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "p_load(tidyverse, rio,skimr,tmaptools, sf, leaflet, rvest, xml2, osmdata, ggsn, tm,wordcloud,dplyr) # Llamamos las librerias  necesarias para el taller##",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#########################################1.Regresiones#######################################################",
        "> ",
        "#1.1 Estimaciones#",
        "> ",
        "",
        "> ",
        "data_regresiones<-import(file =\"input/data_regresiones.rds\" )#Importo la base de datos data_regresiones",
        "> ",
        "summary(data_regresiones)",
        "     rooms          bathrooms      surface_total         price           property_type         dist_cbd       \n Min.   : 1.000   Min.   : 1.000   Min.   :   1.01   Min.   :0.000e+00   Length:54577       Min.   :   28.25  \n 1st Qu.: 3.000   1st Qu.: 2.000   1st Qu.:  71.00   1st Qu.:3.150e+08   Class :character   1st Qu.: 7800.47  \n Median : 3.000   Median : 3.000   Median : 104.00   Median :5.024e+08   Mode  :character   Median :10310.96  \n Mean   : 3.446   Mean   : 2.869   Mean   : 146.72   Mean   :7.483e+08  ",
        "                    Mean   :10073.38  \n 3rd Qu.: 4.000   3rd Qu.: 4.000   3rd Qu.: 175.00   3rd Qu.:8.690e+08                      3rd Qu.:12868.04  \n Max.   :99.000   Max.   :20.000   Max.   :2660.00   Max.   :3.220e+10                      Max.   :23525.32  \n   dist_cole          dist_park         luces_2019      luces_2021     cambio_activ     \n Min.   :   2.482   Min.   :   0.00   Min.   :54.00   Min.   :55.00   Min.   :-1.61290  \n 1st Qu.: 497.414   1st Qu.:  44.41   1st Qu.:63.00   1st Qu.:63.00   1st Qu.: 0.00000  ",
        "\n Median : 767.514   Median :  92.29   Median :63.00   Median :63.00   Median : 0.00000  \n Mean   :1034.802   Mean   : 121.25   Mean   :62.96   Mean   :62.97   Mean   : 0.01579  \n 3rd Qu.:1078.863   3rd Qu.: 156.73   3rd Qu.:63.00   3rd Qu.:63.00   3rd Qu.: 0.00000  \n Max.   :8282.299   Max.   :2435.73   Max.   :63.00   Max.   :63.00   Max.   : 1.85185  \n",
        "> ",
        "#Modelo 1",
        "> ",
        "m1_price<-lm(price~dist_park+surface_total+luces_2021+rooms+bathrooms, data=data_regresiones)#Regresion 1 por la cual quiero determinar el precio",
        "> ",
        "summary(m1_price)#Ver resultado de la regresion",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + luces_2021 + \n    rooms + bathrooms, data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.356e+09 -2.099e+08 -6.645e+07  8.714e+07  3.095e+10 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -9.761e+09  5.179e+08 -18.849  < 2e-16 ***\ndist_park      6.842e+04  2.404e+04   2.846  0.00442 ** \nsurface_total  1.999e+06  2.270e+04  88.079  < 2e-16 ***\nluces_2021     1.520e+08  8.204e+06",
        "  18.531  < 2e-16 ***\nrooms         -4.476e+06  1.139e+06  -3.928 8.56e-05 ***\nbathrooms      2.266e+08  2.484e+06  91.236  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 652700000 on 54571 degrees of freedom\nMultiple R-squared:  0.3833,\tAdjusted R-squared:  0.3832 \nF-statistic:  6784 on 5 and 54571 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "#Modelo 2 ",
        "> ",
        "m2_price<-lm(price~dist_park+surface_total+dist_cbd +rooms+bathrooms, data=data_regresiones)#Regresion 2 por la cual quiero determinar el precio",
        "> ",
        "summary(m2_price)#Ver resultado de la regresion",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + dist_cbd + rooms + \n    bathrooms, data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.067e+09 -2.059e+08 -4.195e+07  9.546e+07  3.094e+10 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    1.589e+08  1.048e+07  15.154  < 2e-16 ***\ndist_park     -5.792e+04  2.193e+04  -2.641  0.00826 ** \nsurface_total  1.888e+06  2.142e+04  88.109  < 2e-16 ***\ndist_cbd      -3.155e+04  7.331e+02",
        " -43.036  < 2e-16 ***\nrooms         -1.926e+06  1.126e+06  -1.711  0.08710 .  \nbathrooms      2.245e+08  2.439e+06  92.045  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 643900000 on 54571 degrees of freedom\nMultiple R-squared:  0.3998,\tAdjusted R-squared:  0.3997 \nF-statistic:  7270 on 5 and 54571 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "#Modelo 3",
        "> ",
        "m3_price<-lm(price~dist_park+surface_total +rooms+bathrooms+dist_cole, data=data_regresiones)#Regresion 3 por la cual quiero determinar el precio",
        "> ",
        "summary(m3_price)#Ver resultado de la regresion",
        "\nCall:\nlm(formula = price ~ dist_park + surface_total + rooms + bathrooms + \n    dist_cole, data = data_regresiones)\n\nResiduals:\n       Min         1Q     Median         3Q        Max \n-5.108e+09 -2.194e+08 -7.549e+07  9.233e+07  3.098e+10 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -44034212    8124221  -5.420 5.98e-08 ***\ndist_park       -117406      22034  -5.328 9.95e-08 ***\nsurface_total   1867212      21549  86.649  < 2e-16 ***\nrooms          -2219998    1132323",
        "  -1.961   0.0499 *  \nbathrooms     221959314    2464366  90.068  < 2e-16 ***\ndist_cole        -93168       2689 -34.646  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 647700000 on 54571 degrees of freedom\nMultiple R-squared:  0.3928,\tAdjusted R-squared:  0.3927 \nF-statistic:  7060 on 5 and 54571 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "",
        "> ",
        "#1.2 Presentar resultados#",
        "> ",
        "coeficientes_modelos = bind_rows(m1_price,m2_price,m3_price, .id = \"coefficients\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`bind_rows()`\u001B[39m:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m Argument 1 must be a data frame or a named atomic vector.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "data",
        "function (..., list = character(), package = NULL, lib.loc = NULL, \n    verbose = getOption(\"verbose\"), envir = .GlobalEnv, \n    overwrite = TRUE) \n{\n    fileExt <- function(x) {\n        db <- grepl(\"\\\\.[^.]+\\\\.(gz|bz2|xz)$\", x)\n        ans <- sub(\".*\\\\.\", \"\", x)\n        ans[db] <- sub(\".*\\\\.([^.]+\\\\.)(gz|bz2|xz)$\", \"\\\\1\\\\2\", \n            x[db])\n        ans\n    }\n    my_read_table <- function(...) {\n        lcc <- Sys.getlocale(\"LC_COLLATE\")\n        on.exit(Sys.setlocale(\"LC_COLLATE\", lcc))\n        Sys.setlocale(\"LC_COLLATE\", \"C\")\n",
        "        read.table(...)\n    }\n    stopifnot(is.character(list))\n    names <- c(as.character(substitute(list(...))[-1L]), list)\n    if (!is.null(package)) {\n        if (!is.character(package)) \n            stop(\"'package' must be a character vector or NULL\")\n    }\n    paths <- find.package(package, lib.loc, verbose = verbose)\n    if (is.null(lib.loc)) \n        paths <- c(path.package(package, TRUE), if (!length(package)) getwd(), \n            paths)\n    paths <- unique(normalizePath(paths[file.exists(paths)]))\n",
        "    paths <- paths[dir.exists(file.path(paths, \"data\"))]\n    dataExts <- tools:::.make_file_exts(\"data\")\n    if (length(names) == 0L) {\n        db <- matrix(character(), nrow = 0L, ncol = 4L)\n        for (path in paths) {\n            entries <- NULL\n            packageName <- if (file_test(\"-f\", file.path(path, \n                \"DESCRIPTION\"))) \n                basename(path)\n            else \".\"\n            if (file_test(\"-f\", INDEX <- file.path(path, \n                \"Meta\", \"data.rds\"))) {\n                entries <- readRDS(INDEX)\n",
        "            }\n            else {\n                dataDir <- file.path(path, \"data\")\n                entries <- tools::list_files_with_type(dataDir, \n                  \"data\")\n                if (length(entries)) {\n                  entries <- unique(tools::file_path_sans_ext(basename(entries)))\n                  entries <- cbind(entries, \"\")\n                }\n            }\n            if (NROW(entries)) {\n                if (is.matrix(entries) && ncol(entries) == 2L) \n                  db <- rbind(db, cbind(packageName, dirname(path), \n",
        "                    entries))\n                else warning(gettextf(\"data index for package %s is invalid and will be ignored\", \n                  sQuote(packageName)), domain = NA, call. = FALSE)\n            }\n        }\n        colnames(db) <- c(\"Package\", \"LibPath\", \"Item\", \n            \"Title\")\n        footer <- if (missing(package)) \n            paste0(\"Use \", sQuote(paste(\"data(package =\", \n                \".packages(all.available = TRUE))\")), \"\\n\", \n                \"to list the data sets in all *available* packages.\")\n",
        "        else NULL\n        y <- list(title = \"Data sets\", header = NULL, results = db, \n            footer = footer)\n        class(y) <- \"packageIQR\"\n        return(y)\n    }\n    paths <- file.path(paths, \"data\")\n    for (name in names) {\n        found <- FALSE\n        for (p in paths) {\n            tmp_env <- if (overwrite) \n                envir\n            else new.env()\n            if (file_test(\"-f\", file.path(p, \"Rdata.rds\"))) {\n                rds <- readRDS(file.path(p, \"Rdata.rds\"))\n                if (name %in% names(rds)) {\n",
        "                  found <- TRUE\n                  if (verbose) \n                    message(sprintf(\"name=%s:\\t found in Rdata.rds\", \n                      name), domain = NA)\n                  thispkg <- sub(\".*/([^/]*)/data$\", \"\\\\1\", \n                    p)\n                  thispkg <- sub(\"_.*$\", \"\", thispkg)\n                  thispkg <- paste0(\"package:\", thispkg)\n                  objs <- rds[[name]]\n                  lazyLoad(file.path(p, \"Rdata\"), envir = tmp_env, \n                    filter = function(x) x %in% objs)\n",
        "                  break\n                }\n                else if (verbose) \n                  message(sprintf(\"name=%s:\\t NOT found in names() of Rdata.rds, i.e.,\\n\\t%s\\n\", \n                    name, paste(names(rds), collapse = \",\")), \n                    domain = NA)\n            }\n            if (file_test(\"-f\", file.path(p, \"Rdata.zip\"))) {\n                warning(\"zipped data found for package \", \n                  sQuote(basename(dirname(p))), \".\\nThat is defunct, so please re-install the package.\", \n",
        "                  domain = NA)\n                if (file_test(\"-f\", fp <- file.path(p, \n                  \"filelist\"))) \n                  files <- file.path(p, scan(fp, what = \"\", \n                    quiet = TRUE))\n                else {\n                  warning(gettextf(\"file 'filelist' is missing for directory %s\", \n                    sQuote(p)), domain = NA)\n                  next\n                }\n            }\n            else {\n                files <- list.files(p, full.names = TRUE)\n            }\n",
        "            files <- files[grep(name, files, fixed = TRUE)]\n            if (length(files) > 1L) {\n                o <- match(fileExt(files), dataExts, nomatch = 100L)\n                paths0 <- dirname(files)\n                paths0 <- factor(paths0, levels = unique(paths0))\n                files <- files[order(paths0, o)]\n            }\n            if (length(files)) {\n                for (file in files) {\n                  if (verbose) \n                    message(\"name=\", name, \":\\t file= ...\", \n                      .Platform$file.sep, basename(file), \"::\\t\", \n",
        "                      appendLF = FALSE, domain = NA)\n                  ext <- fileExt(file)\n                  if (basename(file) != paste0(name, \".\", \n                    ext)) \n                    found <- FALSE\n                  else {\n                    found <- TRUE\n                    zfile <- file\n                    zipname <- file.path(dirname(file), \"Rdata.zip\")\n                    if (file.exists(zipname)) {\n                      Rdatadir <- tempfile(\"Rdata\")\n                      dir.create(Rdatadir, showWarnings = FALSE)\n",
        "                      topic <- basename(file)\n                      rc <- .External(C_unzip, zipname, topic, \n                        Rdatadir, FALSE, TRUE, FALSE, FALSE)\n                      if (rc == 0L) \n                        zfile <- file.path(Rdatadir, topic)\n                    }\n                    if (zfile != file) \n                      on.exit(unlink(zfile))\n                    switch(ext, R = , r = {\n                      library(\"utils\")\n                      sys.source(zfile, chdir = TRUE, envir = tmp_env)\n",
        "                    }, RData = , rdata = , rda = load(zfile, \n                      envir = tmp_env), TXT = , txt = , tab = , \n                      tab.gz = , tab.bz2 = , tab.xz = , txt.gz = , \n                      txt.bz2 = , txt.xz = assign(name, my_read_table(zfile, \n                        header = TRUE, as.is = FALSE), envir = tmp_env), \n                      CSV = , csv = , csv.gz = , csv.bz2 = , \n                      csv.xz = assign(name, my_read_table(zfile, \n                        header = TRUE, sep = \";\", as.is = FALSE), \n",
        "                        envir = tmp_env), found <- FALSE)\n                  }\n                  if (found) \n                    break\n                }\n                if (verbose) \n                  message(if (!found) \n                    \"*NOT* \", \"found\", domain = NA)\n            }\n            if (found) \n                break\n        }\n        if (!found) {\n            warning(gettextf(\"data set %s not found\", sQuote(name)), \n                domain = NA)\n        }\n        else if (!overwrite) {\n            for (o in ls(envir = tmp_env, all.names = TRUE)) {\n",
        "                if (exists(o, envir = envir, inherits = FALSE)) \n                  warning(gettextf(\"an object named %s already exists and will not be overwritten\", \n                    sQuote(o)))\n                else assign(o, get(o, envir = tmp_env, inherits = FALSE), \n                  envir = envir)\n            }\n            rm(tmp_env)\n        }\n    }\n    invisible(names)\n}\n<bytecode: 0x00000265d50336b0>\n<environment: namespace:utils>\n\nRestarting R session...\n\n"
    ]
}